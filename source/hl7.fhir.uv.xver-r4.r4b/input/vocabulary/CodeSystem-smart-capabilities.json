{
  "resourceType": "CodeSystem",
  "id": "smart-capabilities",
  "extension": [
    {
      "extension": [
        {
          "url": "packageId",
          "valueId": "hl7.fhir.uv.xver-r4.r4b"
        },
        {
          "url": "version",
          "valueString": "0.0.1-snapshot-2"
        }
      ],
      "url": "http://hl7.org/fhir/StructureDefinition/package-source"
    },
    {
      "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-wg",
      "valueCode": "fhir"
    }
  ],
  "url": "http://terminology.hl7.org/CodeSystem/smart-capabilities",
  "version": "4.0.1",
  "name": "SmartCapabilities",
  "title": "SmartCapabilities",
  "status": "draft",
  "experimental": false,
  "date": "2019-10-31T17:29:23-05:00",
  "publisher": "FHIR Infrastructure",
  "contact": [
    {
      "name": "FHIR Infrastructure",
      "telecom": [
        {
          "system": "url",
          "value": "http://www.hl7.org/Special/committees/fiwg"
        }
      ]
    }
  ],
  "description": "Codes that define what the server is capable of.",
  "caseSensitive": true,
  "valueSet": "http://hl7.org/fhir/ValueSet/smart-capabilities",
  "content": "complete",
  "concept": [
    {
      "code": "launch-ehr",
      "display": "EHR Launch Mode",
      "definition": "support for SMART’s EHR Launch mode."
    },
    {
      "code": "launch-standalone",
      "display": "Standalone Launch Mode",
      "definition": "support for SMART’s Standalone Launch mode."
    },
    {
      "code": "client-public",
      "display": "Public Client Profile",
      "definition": "support for SMART’s public client profile (no client authentication)."
    },
    {
      "code": "client-confidential-symmetric",
      "display": "Confidential Client Profile",
      "definition": "support for SMART’s confidential client profile (symmetric client secret authentication)."
    },
    {
      "code": "sso-openid-connect",
      "display": "Supports OpenID Connect",
      "definition": "support for SMART’s OpenID Connect profile."
    },
    {
      "code": "context-passthrough-banner",
      "display": "Allows \"Need Patient Banner\"",
      "definition": "support for “need patient banner” launch context (conveyed via need_patient_banner token parameter)."
    },
    {
      "code": "context-passthrough-style",
      "display": "Allows \"Smart Style Style\"",
      "definition": "support for “SMART style URL” launch context (conveyed via smart_style_url token parameter)."
    },
    {
      "code": "context-ehr-patient",
      "display": "Allows \"Patient Level Launch Context (EHR)\"",
      "definition": "support for patient-level launch context (requested by launch/patient scope, conveyed via patient token parameter)."
    },
    {
      "code": "context-ehr-encounter",
      "display": "Allows \"Encounter Level Launch Context (EHR)\"",
      "definition": "support for encounter-level launch context (requested by launch/encounter scope, conveyed via encounter token parameter)."
    },
    {
      "code": "context-standalone-patient",
      "display": "Allows \"Patient Level Launch Context (STANDALONE)\"",
      "definition": "support for patient-level launch context (requested by launch/patient scope, conveyed via patient token parameter)."
    },
    {
      "code": "context-standalone-encounter",
      "display": "Allows \"Encounter Level Launch Context (STANDALONE)\"",
      "definition": "support for encounter-level launch context (requested by launch/encounter scope, conveyed via encounter token parameter)."
    },
    {
      "code": "permission-offline",
      "display": "Supports Refresh Token",
      "definition": "support for refresh tokens (requested by offline_access scope)."
    },
    {
      "code": "permission-patient",
      "display": "Supports Patient Level Scopes",
      "definition": "support for patient-level scopes (e.g. patient/Observation.read)."
    },
    {
      "code": "permission-user",
      "display": "Supports User Level Scopes",
      "definition": "support for user-level scopes (e.g. user/Appointment.read)."
    }
  ]
}