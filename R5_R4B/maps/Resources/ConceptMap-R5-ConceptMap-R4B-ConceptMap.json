{
  "resourceType": "ConceptMap",
  "id": "R5-ConceptMap-R4B-ConceptMap",
  "extension": [
    {
      "url": "http://hl7.org/fhir/StructureDefinition/package-source",
      "extension": [
        {
          "url": "packageId",
          "valueString": "hl7.fhir.uv.xver.r5-r4b"
        },
        {
          "url": "version",
          "valueString": "0.0.1"
        }
      ]
    }
  ],
  "url": "http://hl7.org/fhir/uv/xver/R5-R4B/ConceptMap/R5-ConceptMap-R4B-ConceptMap",
  "name": "R5-ConceptMap-R4B-ConceptMap",
  "title": "Concept map to convert a FHIR R5 ConceptMap into FHIR R4B",
  "sourceScopeCanonical": "http://hl7.org/fhir/StructureDefinition/ConceptMap|5.0.0",
  "targetScopeCanonical": "http://hl7.org/fhir/StructureDefinition/ConceptMap|4.3.0",
  "group": [
    {
      "source": "http://hl7.org/fhir/StructureDefinition/ConceptMap",
      "target": "http://hl7.org/fhir/StructureDefinition/ConceptMap",
      "element": [
        {
          "code": "ConceptMap.group.element.target.dependsOn.attribute",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn.property",
              "relationship": "equivalent"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.value[x]",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn.value",
              "relationship": "equivalent"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.otherMap",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.url",
              "relationship": "equivalent"
            }
          ]
        }
      ]
    },
    {
      "source": "http://hl7.org/fhir/StructureDefinition/ConceptMap",
      "target": "http://hl7.org/fhir/StructureDefinition/ConceptMap",
      "element": [
        {
          "code": "ConceptMap",
          "display": "A map from one set of concepts to one or more other concepts",
          "target": [
            {
              "code": "ConceptMap",
              "display": "A map from one set of concepts to one or more other concepts",
              "relationship": "equivalent",
              "comment": "R5 \u0060ConceptMap\u0060 maps as Equivalent to R4B \u0060ConceptMap\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.additionalAttribute",
          "display": "Definition of an additional attribute to act as a data source or target",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.code",
          "display": "Identifies this additional attribute through this resource",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.description",
          "display": "Why the additional attribute is defined, and/or what the data element it refers to is",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.extension",
          "display": "Additional content defined by implementations",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.id",
          "display": "Unique id for inter-element referencing",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.type",
          "display": "code | Coding | string | boolean | Quantity",
          "noMap": true
        },
        {
          "code": "ConceptMap.additionalAttribute.uri",
          "display": "Formal identifier for the data element referred to in this attribte",
          "noMap": true
        },
        {
          "code": "ConceptMap.approvalDate",
          "display": "When the ConceptMap was approved by publisher",
          "noMap": true
        },
        {
          "code": "ConceptMap.author",
          "display": "Who authored the ConceptMap",
          "noMap": true
        },
        {
          "code": "ConceptMap.contact",
          "display": "Contact details for the publisher",
          "target": [
            {
              "code": "ConceptMap.contact",
              "display": "Contact details for the publisher",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.contact\u0060 maps as Equivalent to R4B \u0060ConceptMap.contact\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.contained",
          "display": "Contained, inline Resources",
          "target": [
            {
              "code": "ConceptMap.contained",
              "display": "Contained, inline Resources",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.contained\u0060 maps as Equivalent to R4B \u0060ConceptMap.contained\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.copyright",
          "display": "Use and/or publishing restrictions",
          "target": [
            {
              "code": "ConceptMap.copyright",
              "display": "Use and/or publishing restrictions",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.copyright\u0060 maps as Equivalent to R4B \u0060ConceptMap.copyright\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.copyrightLabel",
          "display": "Copyright holder and year(s)",
          "noMap": true
        },
        {
          "code": "ConceptMap.date",
          "display": "Date last changed",
          "target": [
            {
              "code": "ConceptMap.date",
              "display": "Date last changed",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.date\u0060 maps as Equivalent to R4B \u0060ConceptMap.date\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.description",
          "display": "Natural language description of the concept map",
          "target": [
            {
              "code": "ConceptMap.description",
              "display": "Natural language description of the concept map",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.description\u0060 maps as Equivalent to R4B \u0060ConceptMap.description\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.editor",
          "display": "Who edited the ConceptMap",
          "noMap": true
        },
        {
          "code": "ConceptMap.effectivePeriod",
          "display": "When the ConceptMap is expected to be used",
          "noMap": true
        },
        {
          "code": "ConceptMap.endorser",
          "display": "Who endorsed the ConceptMap",
          "noMap": true
        },
        {
          "code": "ConceptMap.experimental",
          "display": "For testing purposes, not real usage",
          "target": [
            {
              "code": "ConceptMap.experimental",
              "display": "For testing purposes, not real usage",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.experimental\u0060 maps as Equivalent to R4B \u0060ConceptMap.experimental\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group",
          "display": "Same source and target systems",
          "target": [
            {
              "code": "ConceptMap.group",
              "display": "Same source and target systems",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group\u0060 maps as Equivalent to R4B \u0060ConceptMap.group\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element",
          "display": "Mappings for a concept from the source set",
          "target": [
            {
              "code": "ConceptMap.group.element",
              "display": "Mappings for a concept from the source set",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.code",
          "display": "Identifies element being mapped",
          "target": [
            {
              "code": "ConceptMap.group.element.code",
              "display": "Identifies element being mapped",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.code\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.code\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.display",
          "display": "Display for the code",
          "target": [
            {
              "code": "ConceptMap.group.element.display",
              "display": "Display for the code",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.display\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.display\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.group.element.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.id",
          "display": "Unique id for inter-element referencing",
          "target": [
            {
              "code": "ConceptMap.group.element.id",
              "display": "Unique id for inter-element referencing",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "target": [
            {
              "code": "ConceptMap.group.element.modifierExtension",
              "display": "Extensions that cannot be ignored even if unrecognized",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.noMap",
          "display": "No mapping to a target concept for this source concept",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target",
          "display": "Concept in target system for element",
          "target": [
            {
              "code": "ConceptMap.group.element.target",
              "display": "Concept in target system for element",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.code",
          "display": "Code that identifies the target element",
          "target": [
            {
              "code": "ConceptMap.group.element.target.code",
              "display": "Code that identifies the target element",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.code\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.code\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.comment",
          "display": "Description of status/issues in mapping",
          "target": [
            {
              "code": "ConceptMap.group.element.target.comment",
              "display": "Description of status/issues in mapping",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.comment\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.comment\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn",
          "display": "Other properties required for this mapping",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn",
              "display": "Other elements required for this mapping (from context)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.dependsOn\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.dependsOn\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.attribute",
          "display": "A reference to a mapping attribute defined in ConceptMap.additionalAttribute",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.dependsOn.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.target.dependsOn.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.id",
          "display": "Unique id for inter-element referencing",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn.id",
              "display": "Unique id for inter-element referencing",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.dependsOn.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.dependsOn.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "target": [
            {
              "code": "ConceptMap.group.element.target.dependsOn.modifierExtension",
              "display": "Extensions that cannot be ignored even if unrecognized",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.dependsOn.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.target.dependsOn.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.value[x]",
          "display": "Value of the referenced data element",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.dependsOn.valueSet",
          "display": "The mapping depends on a data element with a value from this value set",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.display",
          "display": "Display for the code",
          "target": [
            {
              "code": "ConceptMap.group.element.target.display",
              "display": "Display for the code",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.display\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.display\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.group.element.target.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.target.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.id",
          "display": "Unique id for inter-element referencing",
          "target": [
            {
              "code": "ConceptMap.group.element.target.id",
              "display": "Unique id for inter-element referencing",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "target": [
            {
              "code": "ConceptMap.group.element.target.modifierExtension",
              "display": "Extensions that cannot be ignored even if unrecognized",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.element.target.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.product",
          "display": "Other data elements that this mapping also produces",
          "target": [
            {
              "code": "ConceptMap.group.element.target.product",
              "display": "Other concepts that this mapping also produces",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.element.target.product\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.element.target.product\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.element.target.property",
          "display": "Property value for the source -\u003E target mapping",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.property.code",
          "display": "Reference to ConceptMap.property.code",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.property.extension",
          "display": "Additional content defined by implementations",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.property.id",
          "display": "Unique id for inter-element referencing",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.property.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.property.value[x]",
          "display": "Value of the property for this concept",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.relationship",
          "display": "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.target.valueSet",
          "display": "Identifies the set of target concepts",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.element.valueSet",
          "display": "Identifies the set of concepts being mapped",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.group.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.id",
          "display": "Unique id for inter-element referencing",
          "target": [
            {
              "code": "ConceptMap.group.id",
              "display": "Unique id for inter-element referencing",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "target": [
            {
              "code": "ConceptMap.group.modifierExtension",
              "display": "Extensions that cannot be ignored even if unrecognized",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.source",
          "display": "Source system where concepts to be mapped are defined",
          "target": [
            {
              "code": "ConceptMap.group.source",
              "display": "Source system where concepts to be mapped are defined",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.source\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.source\u0060 - source has change due to type change: R5 source canonical has no equivalent or mapped type in R4B source"
            }
          ]
        },
        {
          "code": "ConceptMap.group.target",
          "display": "Target system that the concepts are to be mapped to",
          "target": [
            {
              "code": "ConceptMap.group.target",
              "display": "Target system that the concepts are to be mapped to",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.target\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.target\u0060 - target has change due to type change: R5 target canonical has no equivalent or mapped type in R4B target"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped",
          "display": "What to do when there is no mapping target for the source concept and ConceptMap.group.element.noMap is not true",
          "target": [
            {
              "code": "ConceptMap.group.unmapped",
              "display": "What to do when there is no mapping for the source concept",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.unmapped\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.code",
          "display": "Fixed code when mode = fixed",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.code",
              "display": "Fixed code when mode = fixed",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.code\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.unmapped.code\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.display",
          "display": "Display for the code",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.display",
              "display": "Display for the code",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.display\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.unmapped.display\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.extension",
          "display": "Additional content defined by implementations",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.extension",
              "display": "Additional content defined by implementations",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.extension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.unmapped.extension\u0060 - extension has change due to type change: R5 \u0060extension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060extension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.id",
          "display": "Unique id for inter-element referencing",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.id",
              "display": "Unique id for inter-element referencing",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.unmapped.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.mode",
          "display": "use-source-code | fixed | other-map",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.mode",
              "display": "provided | fixed | other-map",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.mode\u0060 maps as Equivalent to R4B \u0060ConceptMap.group.unmapped.mode\u0060 - mode has compatible required binding for code type: http://hl7.org/fhir/ValueSet/conceptmap-unmapped-mode|5.0.0 and http://hl7.org/fhir/ValueSet/conceptmap-unmapped-mode|4.3.0 (Equivalent)"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "target": [
            {
              "code": "ConceptMap.group.unmapped.modifierExtension",
              "display": "Extensions that cannot be ignored even if unrecognized",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.group.unmapped.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.group.unmapped.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.group.unmapped.otherMap",
          "display": "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.unmapped.relationship",
          "display": "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to",
          "noMap": true
        },
        {
          "code": "ConceptMap.group.unmapped.valueSet",
          "display": "Fixed code set when mode = fixed",
          "noMap": true
        },
        {
          "code": "ConceptMap.id",
          "display": "Logical id of this artifact",
          "target": [
            {
              "code": "ConceptMap.id",
              "display": "Logical id of this artifact",
              "relationship": "equivalent",
              "comment": "R5 \u0060ConceptMap.id\u0060 maps as Equivalent to R4B \u0060ConceptMap.id\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.identifier",
          "display": "Additional identifier for the concept map",
          "target": [
            {
              "code": "ConceptMap.identifier",
              "display": "Additional identifier for the concept map",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.identifier\u0060 maps as RelatedTo to R4B \u0060ConceptMap.identifier\u0060 - identifier changed from array to scalar (max cardinality from * to 1)"
            }
          ]
        },
        {
          "code": "ConceptMap.implicitRules",
          "display": "A set of rules under which this content was created",
          "target": [
            {
              "code": "ConceptMap.implicitRules",
              "display": "A set of rules under which this content was created",
              "relationship": "equivalent",
              "comment": "R5 \u0060ConceptMap.implicitRules\u0060 maps as Equivalent to R4B \u0060ConceptMap.implicitRules\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.jurisdiction",
          "display": "Intended jurisdiction for concept map (if applicable)",
          "target": [
            {
              "code": "ConceptMap.jurisdiction",
              "display": "Intended jurisdiction for concept map (if applicable)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.jurisdiction\u0060 maps as Equivalent to R4B \u0060ConceptMap.jurisdiction\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.language",
          "display": "Language of the resource content",
          "target": [
            {
              "code": "ConceptMap.language",
              "display": "Language of the resource content",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.language\u0060 maps as RelatedTo to R4B \u0060ConceptMap.language\u0060 - language changed the binding strength from Required to Preferred"
            }
          ]
        },
        {
          "code": "ConceptMap.lastReviewDate",
          "display": "When the ConceptMap was last reviewed by the publisher",
          "noMap": true
        },
        {
          "code": "ConceptMap.meta",
          "display": "Metadata about the resource",
          "target": [
            {
              "code": "ConceptMap.meta",
              "display": "Metadata about the resource",
              "relationship": "equivalent",
              "comment": "R5 \u0060ConceptMap.meta\u0060 maps as Equivalent to R4B \u0060ConceptMap.meta\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.modifierExtension",
          "display": "Extensions that cannot be ignored",
          "target": [
            {
              "code": "ConceptMap.modifierExtension",
              "display": "Extensions that cannot be ignored",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.modifierExtension\u0060 maps as SourceIsBroaderThanTarget to R4B \u0060ConceptMap.modifierExtension\u0060 - modifierExtension has change due to type change: R5 \u0060modifierExtension\u0060 \u0060Extension\u0060 maps as SourceIsBroaderThanTarget for R4B \u0060modifierExtension\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.name",
          "display": "Name for this concept map (computer friendly)",
          "target": [
            {
              "code": "ConceptMap.name",
              "display": "Name for this concept map (computer friendly)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.name\u0060 maps as Equivalent to R4B \u0060ConceptMap.name\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.property",
          "display": "Additional properties of the mapping",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.code",
          "display": "Identifies the property on the mappings, and when referred to in the $translate operation",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.description",
          "display": "Why the property is defined, and/or what it conveys",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.extension",
          "display": "Additional content defined by implementations",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.id",
          "display": "Unique id for inter-element referencing",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.modifierExtension",
          "display": "Extensions that cannot be ignored even if unrecognized",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.system",
          "display": "The CodeSystem from which code values come",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.type",
          "display": "Coding | string | integer | boolean | dateTime | decimal | code",
          "noMap": true
        },
        {
          "code": "ConceptMap.property.uri",
          "display": "Formal identifier for the property",
          "noMap": true
        },
        {
          "code": "ConceptMap.publisher",
          "display": "Name of the publisher/steward (organization or individual)",
          "target": [
            {
              "code": "ConceptMap.publisher",
              "display": "Name of the publisher (organization or individual)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.publisher\u0060 maps as Equivalent to R4B \u0060ConceptMap.publisher\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.purpose",
          "display": "Why this concept map is defined",
          "target": [
            {
              "code": "ConceptMap.purpose",
              "display": "Why this concept map is defined",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.purpose\u0060 maps as Equivalent to R4B \u0060ConceptMap.purpose\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.relatedArtifact",
          "display": "Additional documentation, citations, etc",
          "noMap": true
        },
        {
          "code": "ConceptMap.reviewer",
          "display": "Who reviewed the ConceptMap",
          "noMap": true
        },
        {
          "code": "ConceptMap.sourceScope[x]",
          "display": "The source value set that contains the concepts that are being mapped",
          "noMap": true
        },
        {
          "code": "ConceptMap.status",
          "display": "draft | active | retired | unknown",
          "target": [
            {
              "code": "ConceptMap.status",
              "display": "draft | active | retired | unknown",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.status\u0060 maps as Equivalent to R4B \u0060ConceptMap.status\u0060 - status has compatible required binding for code type: http://hl7.org/fhir/ValueSet/publication-status|5.0.0 and http://hl7.org/fhir/ValueSet/publication-status|4.3.0 (Equivalent)"
            }
          ]
        },
        {
          "code": "ConceptMap.targetScope[x]",
          "display": "The target value set which provides context for the mappings",
          "noMap": true
        },
        {
          "code": "ConceptMap.text",
          "display": "Text summary of the resource, for human interpretation",
          "target": [
            {
              "code": "ConceptMap.text",
              "display": "Text summary of the resource, for human interpretation",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.text\u0060 maps as Equivalent to R4B \u0060ConceptMap.text\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.title",
          "display": "Name for this concept map (human friendly)",
          "target": [
            {
              "code": "ConceptMap.title",
              "display": "Name for this concept map (human friendly)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.title\u0060 maps as Equivalent to R4B \u0060ConceptMap.title\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.topic",
          "display": "E.g. Education, Treatment, Assessment, etc",
          "noMap": true
        },
        {
          "code": "ConceptMap.url",
          "display": "Canonical identifier for this concept map, represented as a URI (globally unique)",
          "target": [
            {
              "code": "ConceptMap.url",
              "display": "Canonical identifier for this concept map, represented as a URI (globally unique)",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.url\u0060 maps as Equivalent to R4B \u0060ConceptMap.url\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.useContext",
          "display": "The context that the content is intended to support",
          "target": [
            {
              "code": "ConceptMap.useContext",
              "display": "The context that the content is intended to support",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.useContext\u0060 maps as Equivalent to R4B \u0060ConceptMap.useContext\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.version",
          "display": "Business version of the concept map",
          "target": [
            {
              "code": "ConceptMap.version",
              "display": "Business version of the concept map",
              "relationship": "related-to",
              "comment": "R5 \u0060ConceptMap.version\u0060 maps as Equivalent to R4B \u0060ConceptMap.version\u0060"
            }
          ]
        },
        {
          "code": "ConceptMap.versionAlgorithm[x]",
          "display": "How to compare versions",
          "noMap": true
        }
      ]
    }
  ]
}