{
  "resourceType": "StructureDefinition",
  "id": "ConceptMap.group.element.target",
  "url": "http://hl7.org/fhir/5.0/StructureDefinition/extension-ConceptMap.group.element.target",
  "name": "XVerExtensionConceptMap.group.element.target",
  "title": "Cross-Version Extension for FHIR R5:ConceptMap.group.element.target compared to FHIR R4",
  "status": "draft",
  "experimental": true,
  "description": "R5 `ConceptMap.group.element.target` maps as Equivalent to R4 `ConceptMap.group.element.target`",
  "fhirVersion": "5.0.0",
  "kind": "complex-type",
  "abstract": false,
  "context": [
    {
      "type": "element",
      "expression": "ConceptMap.group.element.target"
    }
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
            "valueCode": "normative"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version",
            "valueCode": "4.0.0"
          }
        ],
        "path": "Extension",
        "short": "Concept in target system for element",
        "definition": "A concept from the target value set that this concept maps to.",
        "comment": "R5 `ConceptMap.group.element.target` maps as Equivalent to R4 `ConceptMap.group.element.target`\nIdeally there would only be one map, with an 'equivalent' mapping. But multiple maps are allowed for several narrower (i.e. source-is-broader-than-target) options, or to assert that other concepts are not related.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a,N/A"
          }
        ]
      },
      {
        "id": "Extension.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "Unique id for inter-element referencing",
        "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "id"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "condition": [
          "ele-1"
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.extension",
        "path": "Extension.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comment": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "uri"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-ConceptMap.group.element.target",
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.value[x]",
        "path": "Extension.value[x]",
        "short": "Value of extension",
        "definition": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          },
          {
            "code": "boolean"
          },
          {
            "code": "canonical"
          },
          {
            "code": "code"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "decimal"
          },
          {
            "code": "id"
          },
          {
            "code": "instant"
          },
          {
            "code": "integer"
          },
          {
            "code": "integer64"
          },
          {
            "code": "markdown"
          },
          {
            "code": "oid"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "string"
          },
          {
            "code": "time"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "uri"
          },
          {
            "code": "url"
          },
          {
            "code": "uuid"
          },
          {
            "code": "Address"
          },
          {
            "code": "Age"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "CodeableReference"
          },
          {
            "code": "Coding"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Count"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Duration"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "Money"
          },
          {
            "code": "Period"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Range"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "RatioRange"
          },
          {
            "code": "Reference"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "Timing"
          },
          {
            "code": "ContactDetail"
          },
          {
            "code": "DataRequirement"
          },
          {
            "code": "Expression"
          },
          {
            "code": "ParameterDefinition"
          },
          {
            "code": "RelatedArtifact"
          },
          {
            "code": "TriggerDefinition"
          },
          {
            "code": "UsageContext"
          },
          {
            "code": "Availability"
          },
          {
            "code": "ExtendedContactDetail"
          },
          {
            "code": "Dosage"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "ext-1"
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.extension:code",
        "path": "Extension.extension:code",
        "short": "Code that identifies the target element",
        "definition": "Identity (code or path) or the element/item that the map refers to.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:code",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:display",
        "path": "Extension.extension:display",
        "short": "Display for the code",
        "definition": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "comment": "The display is ignored when processing the map.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:display",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:valueSet",
        "path": "Extension.extension:valueSet",
        "short": "Identifies the set of target concepts",
        "definition": "The set of concepts from the ConceptMap.group.target code system which are all being mapped to as part of this mapping rule. The effect of using this data element is the same as having multiple ConceptMap.group.element.target elements with one for each concept in the ConceptMap.group.element.target.valueSet value set.",
        "comment": "If the the value set expansion is empty then the source concept(s) are unmapped and the behavior of ConceptMap.group.unmapped (if present) applies.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:valueSet",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:relationship",
        "path": "Extension.extension:relationship",
        "short": "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to",
        "definition": "The relationship between the source and target concepts. The relationship is read from source to target (e.g. source-is-narrower-than-target).",
        "comment": "This element is labeled as a modifier because it may indicate that there is no mapping.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:relationship",
          "min": 1,
          "max": "1"
        },
        "isModifier": true
      },
      {
        "id": "Extension.extension:comment",
        "path": "Extension.extension:comment",
        "short": "Description of status/issues in mapping",
        "definition": "A description of status/issues in mapping that conveys additional information not represented in  the structured data.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:comment",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:property",
        "path": "Extension.extension:property",
        "short": "Property value for the source -> target mapping",
        "definition": "A property value for this source -> target mapping.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:property",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:code",
        "path": "Extension.extension:code",
        "short": "Reference to ConceptMap.property.code",
        "definition": "A reference to a mapping property defined in ConceptMap.property.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:code",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:value[x]",
        "path": "Extension.extension:value[x]",
        "short": "Value of the property for this concept",
        "definition": "The value of this property. If the type chosen for this element is 'code', then the property SHALL be defined in a ConceptMap.property element.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:value[x]",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:dependsOn",
        "path": "Extension.extension:dependsOn",
        "short": "Other properties required for this mapping",
        "definition": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified data attribute can be resolved, and it has the specified value.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:dependsOn",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:attribute",
        "path": "Extension.extension:attribute",
        "short": "A reference to a mapping attribute defined in ConceptMap.additionalAttribute",
        "definition": "A reference to the additional attribute that holds a value the map depends on.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:attribute",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:value[x]",
        "path": "Extension.extension:value[x]",
        "short": "Value of the referenced data element",
        "definition": "Data element value that the map depends on / produces.",
        "comment": "If the data type is a code, then the code system is .group.source for .dependsOn.valueCode and .group.target for .product.valueCode.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:value[x]",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:valueSet",
        "path": "Extension.extension:valueSet",
        "short": "The mapping depends on a data element with a value from this value set",
        "definition": "This mapping applies if the data element value is a code from this value set.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:valueSet",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:product",
        "path": "Extension.extension:product",
        "short": "Other data elements that this mapping also produces",
        "definition": "Product is the output of a ConceptMap that provides additional values that go in other attributes / data elemnts of the target data.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:product",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Extension",
        "short": "Concept in target system for element",
        "definition": "A concept from the target value set that this concept maps to.",
        "comment": "R5 `ConceptMap.group.element.target` maps as Equivalent to R4 `ConceptMap.group.element.target`\nIdeally there would only be one map, with an 'equivalent' mapping. But multiple maps are allowed for several narrower (i.e. source-is-broader-than-target) options, or to assert that other concepts are not related.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:code",
        "short": "Code that identifies the target element",
        "definition": "Identity (code or path) or the element/item that the map refers to.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:code.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:code.url",
        "fixedUri": "code"
      },
      {
        "path": "Extension.extension:display",
        "short": "Display for the code",
        "definition": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "comment": "The display is ignored when processing the map.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:display.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:display.url",
        "fixedUri": "display"
      },
      {
        "path": "Extension.extension:valueSet",
        "short": "Identifies the set of target concepts",
        "definition": "The set of concepts from the ConceptMap.group.target code system which are all being mapped to as part of this mapping rule. The effect of using this data element is the same as having multiple ConceptMap.group.element.target elements with one for each concept in the ConceptMap.group.element.target.valueSet value set.",
        "comment": "If the the value set expansion is empty then the source concept(s) are unmapped and the behavior of ConceptMap.group.unmapped (if present) applies.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:valueSet.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:valueSet.extension:canonical",
        "sliceName": "canonical",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-canonical"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:valueSet.url",
        "fixedUri": "valueSet"
      },
      {
        "path": "Extension.extension:relationship",
        "short": "related-to | equivalent | source-is-narrower-than-target | source-is-broader-than-target | not-related-to",
        "definition": "The relationship between the source and target concepts. The relationship is read from source to target (e.g. source-is-narrower-than-target).",
        "comment": "This element is labeled as a modifier because it may indicate that there is no mapping.",
        "min": 1,
        "max": "1",
        "isModifier": true
      },
      {
        "path": "Extension.extension:relationship.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:relationship.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:relationship.url",
        "fixedUri": "relationship"
      },
      {
        "path": "Extension.extension:comment",
        "short": "Description of status/issues in mapping",
        "definition": "A description of status/issues in mapping that conveys additional information not represented in  the structured data.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:comment.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:comment.url",
        "fixedUri": "comment"
      },
      {
        "path": "Extension.extension:property",
        "short": "Property value for the source -> target mapping",
        "definition": "A property value for this source -> target mapping.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:property.extension:code",
        "short": "Reference to ConceptMap.property.code",
        "definition": "A reference to a mapping property defined in ConceptMap.property.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:property.extension:code.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:property.extension:code.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:code.url",
        "fixedUri": "code"
      },
      {
        "path": "Extension.extension:property.extension:value[x]",
        "short": "Value of the property for this concept",
        "definition": "The value of this property. If the type chosen for this element is 'code', then the property SHALL be defined in a ConceptMap.property element.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:property.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:Coding",
        "sliceName": "Coding",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Coding"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:string",
        "sliceName": "string",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-string"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:integer",
        "sliceName": "integer",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-integer"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:boolean",
        "sliceName": "boolean",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-boolean"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:dateTime",
        "sliceName": "dateTime",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-dateTime"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:decimal",
        "sliceName": "decimal",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-decimal"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:property.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:property.url",
        "fixedUri": "property"
      },
      {
        "path": "Extension.extension:code",
        "short": "Reference to ConceptMap.property.code",
        "definition": "A reference to a mapping property defined in ConceptMap.property.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:code.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:code.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:code.url",
        "fixedUri": "code"
      },
      {
        "path": "Extension.extension:value[x]",
        "short": "Value of the property for this concept",
        "definition": "The value of this property. If the type chosen for this element is 'code', then the property SHALL be defined in a ConceptMap.property element.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:value[x].extension:Coding",
        "sliceName": "Coding",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Coding"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:string",
        "sliceName": "string",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-string"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:integer",
        "sliceName": "integer",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-integer"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:boolean",
        "sliceName": "boolean",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-boolean"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:dateTime",
        "sliceName": "dateTime",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-dateTime"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:decimal",
        "sliceName": "decimal",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-decimal"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:dependsOn",
        "short": "Other properties required for this mapping",
        "definition": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified data attribute can be resolved, and it has the specified value.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:dependsOn.extension:attribute",
        "short": "A reference to a mapping attribute defined in ConceptMap.additionalAttribute",
        "definition": "A reference to the additional attribute that holds a value the map depends on.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:dependsOn.extension:attribute.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:dependsOn.extension:attribute.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:attribute.url",
        "fixedUri": "attribute"
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x]",
        "short": "Value of the referenced data element",
        "definition": "Data element value that the map depends on / produces.",
        "comment": "If the data type is a code, then the code system is .group.source for .dependsOn.valueCode and .group.target for .product.valueCode.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].extension:Coding",
        "sliceName": "Coding",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Coding"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].extension:string",
        "sliceName": "string",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-string"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].extension:boolean",
        "sliceName": "boolean",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-boolean"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].extension:Quantity",
        "sliceName": "Quantity",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Quantity"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:dependsOn.extension:valueSet",
        "short": "The mapping depends on a data element with a value from this value set",
        "definition": "This mapping applies if the data element value is a code from this value set.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:dependsOn.extension:valueSet.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:dependsOn.extension:valueSet.extension:canonical",
        "sliceName": "canonical",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-canonical"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:dependsOn.extension:valueSet.url",
        "fixedUri": "valueSet"
      },
      {
        "path": "Extension.extension:dependsOn.url",
        "fixedUri": "dependsOn"
      },
      {
        "path": "Extension.extension:attribute",
        "short": "A reference to a mapping attribute defined in ConceptMap.additionalAttribute",
        "definition": "A reference to the additional attribute that holds a value the map depends on.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:attribute.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:attribute.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:attribute.url",
        "fixedUri": "attribute"
      },
      {
        "path": "Extension.extension:value[x]",
        "short": "Value of the referenced data element",
        "definition": "Data element value that the map depends on / produces.",
        "comment": "If the data type is a code, then the code system is .group.source for .dependsOn.valueCode and .group.target for .product.valueCode.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:value[x].extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:Coding",
        "sliceName": "Coding",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Coding"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:string",
        "sliceName": "string",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-string"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:boolean",
        "sliceName": "boolean",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-boolean"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].extension:Quantity",
        "sliceName": "Quantity",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Quantity"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:valueSet",
        "short": "The mapping depends on a data element with a value from this value set",
        "definition": "This mapping applies if the data element value is a code from this value set.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:valueSet.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:valueSet.extension:canonical",
        "sliceName": "canonical",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-canonical"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:valueSet.url",
        "fixedUri": "valueSet"
      },
      {
        "path": "Extension.extension:product",
        "short": "Other data elements that this mapping also produces",
        "definition": "Product is the output of a ConceptMap that provides additional values that go in other attributes / data elemnts of the target data.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:product.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:product.url",
        "fixedUri": "product"
      },
      {
        "path": "Extension.url",
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-ConceptMap.group.element.target"
      }
    ]
  }
}