{
  "resourceType": "StructureDefinition",
  "id": "AuditEvent.agent",
  "url": "http://hl7.org/fhir/5.0/StructureDefinition/extension-AuditEvent.agent",
  "name": "XVerExtensionAuditEvent.agent",
  "title": "Cross-Version Extension for FHIR R5:AuditEvent.agent compared to FHIR R4",
  "status": "draft",
  "experimental": true,
  "description": "R5 `AuditEvent.agent` maps as Equivalent to R4 `AuditEvent.agent`",
  "fhirVersion": "5.0.0",
  "kind": "complex-type",
  "abstract": false,
  "context": [
    {
      "type": "element",
      "expression": "AuditEvent.agent"
    }
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
            "valueCode": "normative"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version",
            "valueCode": "4.0.0"
          }
        ],
        "path": "Extension",
        "short": "Actor involved in the event",
        "definition": "An actor taking an active role in the event or activity that is logged.",
        "comment": "R5 `AuditEvent.agent` maps as Equivalent to R4 `AuditEvent.agent`\nSeveral agents may be associated (i.e. have some responsibility for an activity) with an event or activity.\n\nFor example, an activity may be initiated by one user for other users or involve more than one user. However, only one user may be the initiator/requestor for the activity. \n\nWhen a network are used in an event being recorded, there should be distinct agent elements for the known actors using the network. The agent with a network detail would be the responsible agent for use of that network.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a,N/A"
          }
        ]
      },
      {
        "id": "Extension.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "Unique id for inter-element referencing",
        "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "id"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "condition": [
          "ele-1"
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.extension",
        "path": "Extension.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comment": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "uri"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-AuditEvent.agent",
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.value[x]",
        "path": "Extension.value[x]",
        "short": "Value of extension",
        "definition": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          },
          {
            "code": "boolean"
          },
          {
            "code": "canonical"
          },
          {
            "code": "code"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "decimal"
          },
          {
            "code": "id"
          },
          {
            "code": "instant"
          },
          {
            "code": "integer"
          },
          {
            "code": "integer64"
          },
          {
            "code": "markdown"
          },
          {
            "code": "oid"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "string"
          },
          {
            "code": "time"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "uri"
          },
          {
            "code": "url"
          },
          {
            "code": "uuid"
          },
          {
            "code": "Address"
          },
          {
            "code": "Age"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "CodeableReference"
          },
          {
            "code": "Coding"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Count"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Duration"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "Money"
          },
          {
            "code": "Period"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Range"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "RatioRange"
          },
          {
            "code": "Reference"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "Timing"
          },
          {
            "code": "ContactDetail"
          },
          {
            "code": "DataRequirement"
          },
          {
            "code": "Expression"
          },
          {
            "code": "ParameterDefinition"
          },
          {
            "code": "RelatedArtifact"
          },
          {
            "code": "TriggerDefinition"
          },
          {
            "code": "UsageContext"
          },
          {
            "code": "Availability"
          },
          {
            "code": "ExtendedContactDetail"
          },
          {
            "code": "Dosage"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "ext-1"
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.extension:type",
        "path": "Extension.extension:type",
        "short": "How agent participated",
        "definition": "The Functional Role of the user when performing the event.",
        "comment": "For example: assembler, author, prescriber, signer, investigator, etc.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:type",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:role",
        "path": "Extension.extension:role",
        "short": "Agent role in the event",
        "definition": "The structural roles of the agent indicating the agent's competency. The security role enabling the agent with respect to the activity.",
        "comment": "For example: Chief-of-Radiology, Nurse, Physician, Medical-Student, etc.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:role",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:who",
        "path": "Extension.extension:who",
        "short": "Identifier of who",
        "definition": "Reference to who this agent is that was involved in the event.",
        "comment": "Where a User ID is available it will go into who.identifier. Where a name of the user (human readable) it will go into who.display.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:who",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:requestor",
        "path": "Extension.extension:requestor",
        "short": "Whether user is initiator",
        "definition": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
        "comment": "There can only be one initiator. If the initiator is not clear, then do not choose any one agent as the initiator.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:requestor",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:location",
        "path": "Extension.extension:location",
        "short": "The agent location when the event occurred",
        "definition": "Where the agent location is known, the agent location when the event occurred.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:location",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:policy",
        "path": "Extension.extension:policy",
        "short": "Policy that authorized the agent participation in the event",
        "definition": "Where the policy(ies) are known that authorized the agent participation in the event. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
        "comment": "For example: Where an OAuth token authorizes, the unique identifier from the OAuth token is placed into the policy element Where a policy engine (e.g. XACML) holds policy logic, the unique policy identifier is placed into the policy element.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:policy",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:network[x]",
        "path": "Extension.extension:network[x]",
        "short": "This agent network location for the activity",
        "definition": "When the event utilizes a network there should be an agent describing the local system, and an agent describing remote system, with the network interface details.",
        "comment": "When remote network endpoint is known, another agent representing the remote agent would indicate the remote network endpoint used. Convention is to indicate data flowing from Source to Destination. The convention for Search, given data flows both ways (query parameters vs results), is to have the Source as the initiator of the Search Transaction, and the Destination the responder to the Search transaction.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:network[x]",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:authorization",
        "path": "Extension.extension:authorization",
        "short": "Allowable authorization for this agent",
        "definition": "The authorization (e.g., PurposeOfUse) that was used during the event being recorded.",
        "comment": "Use AuditEvent.agent.authorization when you know that is specific to the agent, otherwise use AuditEvent.authorization. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:authorization",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Extension",
        "short": "Actor involved in the event",
        "definition": "An actor taking an active role in the event or activity that is logged.",
        "comment": "R5 `AuditEvent.agent` maps as Equivalent to R4 `AuditEvent.agent`\nSeveral agents may be associated (i.e. have some responsibility for an activity) with an event or activity.\n\nFor example, an activity may be initiated by one user for other users or involve more than one user. However, only one user may be the initiator/requestor for the activity. \n\nWhen a network are used in an event being recorded, there should be distinct agent elements for the known actors using the network. The agent with a network detail would be the responsible agent for use of that network.",
        "min": 1,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:type",
        "short": "How agent participated",
        "definition": "The Functional Role of the user when performing the event.",
        "comment": "For example: assembler, author, prescriber, signer, investigator, etc.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:type.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:type.url",
        "fixedUri": "type"
      },
      {
        "path": "Extension.extension:role",
        "short": "Agent role in the event",
        "definition": "The structural roles of the agent indicating the agent's competency. The security role enabling the agent with respect to the activity.",
        "comment": "For example: Chief-of-Radiology, Nurse, Physician, Medical-Student, etc.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:role.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:role.url",
        "fixedUri": "role"
      },
      {
        "path": "Extension.extension:who",
        "short": "Identifier of who",
        "definition": "Reference to who this agent is that was involved in the event.",
        "comment": "Where a User ID is available it will go into who.identifier. Where a name of the user (human readable) it will go into who.display.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:who.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:who.extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:who.url",
        "fixedUri": "who"
      },
      {
        "path": "Extension.extension:requestor",
        "short": "Whether user is initiator",
        "definition": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
        "comment": "There can only be one initiator. If the initiator is not clear, then do not choose any one agent as the initiator.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:requestor.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:requestor.url",
        "fixedUri": "requestor"
      },
      {
        "path": "Extension.extension:location",
        "short": "The agent location when the event occurred",
        "definition": "Where the agent location is known, the agent location when the event occurred.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:location.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:location.url",
        "fixedUri": "location"
      },
      {
        "path": "Extension.extension:policy",
        "short": "Policy that authorized the agent participation in the event",
        "definition": "Where the policy(ies) are known that authorized the agent participation in the event. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
        "comment": "For example: Where an OAuth token authorizes, the unique identifier from the OAuth token is placed into the policy element Where a policy engine (e.g. XACML) holds policy logic, the unique policy identifier is placed into the policy element.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:policy.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:policy.url",
        "fixedUri": "policy"
      },
      {
        "path": "Extension.extension:network[x]",
        "short": "This agent network location for the activity",
        "definition": "When the event utilizes a network there should be an agent describing the local system, and an agent describing remote system, with the network interface details.",
        "comment": "When remote network endpoint is known, another agent representing the remote agent would indicate the remote network endpoint used. Convention is to indicate data flowing from Source to Destination. The convention for Search, given data flows both ways (query parameters vs results), is to have the Source as the initiator of the Search Transaction, and the Destination the responder to the Search transaction.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:network[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:network[x].extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:network[x].extension:uri",
        "sliceName": "uri",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-uri"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:network[x].extension:string",
        "sliceName": "string",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-string"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:network[x].url",
        "fixedUri": "network%5Bx%5D"
      },
      {
        "path": "Extension.extension:authorization",
        "short": "Allowable authorization for this agent",
        "definition": "The authorization (e.g., PurposeOfUse) that was used during the event being recorded.",
        "comment": "Use AuditEvent.agent.authorization when you know that is specific to the agent, otherwise use AuditEvent.authorization. For example, during a machine-to-machine transfer it might not be obvious to the audit system who caused the event, but it does know why.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:authorization.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:authorization.extension:CodeableConcept",
        "sliceName": "CodeableConcept",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-CodeableConcept"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:authorization.url",
        "fixedUri": "authorization"
      },
      {
        "path": "Extension.url",
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-AuditEvent.agent"
      }
    ]
  }
}