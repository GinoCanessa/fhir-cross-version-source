{
  "resourceType": "StructureDefinition",
  "id": "Bundle.entry",
  "url": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Bundle.entry",
  "name": "XVerExtensionBundle.entry",
  "title": "Cross-Version Extension for FHIR R5:Bundle.entry compared to FHIR R4",
  "status": "draft",
  "experimental": true,
  "description": "R5 `Bundle.entry` maps as Equivalent to R4 `Bundle.entry`",
  "fhirVersion": "5.0.0",
  "kind": "complex-type",
  "abstract": false,
  "context": [
    {
      "type": "element",
      "expression": "Bundle.entry"
    }
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
            "valueCode": "normative"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version",
            "valueCode": "4.0.0"
          }
        ],
        "path": "Extension",
        "short": "Entry in the bundle - will have a resource or information",
        "definition": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
        "comment": "R5 `Bundle.entry` maps as Equivalent to R4 `Bundle.entry`",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a,N/A"
          }
        ]
      },
      {
        "id": "Extension.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "Unique id for inter-element referencing",
        "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "id"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "condition": [
          "ele-1"
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.extension",
        "path": "Extension.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comment": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "uri"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Bundle.entry",
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.value[x]",
        "path": "Extension.value[x]",
        "short": "Value of extension",
        "definition": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          },
          {
            "code": "boolean"
          },
          {
            "code": "canonical"
          },
          {
            "code": "code"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "decimal"
          },
          {
            "code": "id"
          },
          {
            "code": "instant"
          },
          {
            "code": "integer"
          },
          {
            "code": "integer64"
          },
          {
            "code": "markdown"
          },
          {
            "code": "oid"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "string"
          },
          {
            "code": "time"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "uri"
          },
          {
            "code": "url"
          },
          {
            "code": "uuid"
          },
          {
            "code": "Address"
          },
          {
            "code": "Age"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "CodeableReference"
          },
          {
            "code": "Coding"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Count"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Duration"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "Money"
          },
          {
            "code": "Period"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Range"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "RatioRange"
          },
          {
            "code": "Reference"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "Timing"
          },
          {
            "code": "ContactDetail"
          },
          {
            "code": "DataRequirement"
          },
          {
            "code": "Expression"
          },
          {
            "code": "ParameterDefinition"
          },
          {
            "code": "RelatedArtifact"
          },
          {
            "code": "TriggerDefinition"
          },
          {
            "code": "UsageContext"
          },
          {
            "code": "Availability"
          },
          {
            "code": "ExtendedContactDetail"
          },
          {
            "code": "Dosage"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "ext-1"
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.extension:link",
        "path": "Extension.extension:link",
        "short": "Links related to this entry",
        "definition": "A series of links that provide context to this entry.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:link",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:fullUrl",
        "path": "Extension.extension:fullUrl",
        "short": "URI for resource (e.g. the absolute URL server address, URI for UUID/OID, etc.)",
        "definition": "The Absolute URL for the resource. Except for transactions and batches, each entry in a Bundle must have a fullUrl. The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. Even when not required, fullUrl MAY be set to a urn:uuid to allow referencing entries in a transaction. The fullUrl can be an arbitrary URI and is not limited to urn:uuid, urn:oid, http, and https. The fullUrl element SHALL have a value except when: \n* invoking a create\n* invoking or responding to an operation where the body is not a single identified resource\n* invoking or returning the results of a search or history operation.",
        "comment": "fullUrl might not be [unique in the context of a resource](bundle.html#bundle-unique). Note that since [FHIR resources do not need to be served through the FHIR API](references.html), the fullURL might be a URN or an absolute URL that does not end with the logical id of the resource (Resource.id). However, but if the fullUrl does look like a RESTful server URL (e.g. meets the [regex](references.html#regex), then the 'id' portion of the fullUrl SHALL end with the Resource.id.\n\nNote that the fullUrl is not the same as the canonical URL - it's an absolute url for an endpoint serving the resource (these will happen to have the same value on the canonical server for the resource with the canonical URL).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:fullUrl",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:resource",
        "path": "Extension.extension:resource",
        "short": "A resource in the bundle",
        "definition": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type. This is allowed to be a Parameters resource if and only if it is referenced by something else within the Bundle that provides context/meaning.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:resource",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:search",
        "path": "Extension.extension:search",
        "short": "Search related information",
        "definition": "Information about the search process that lead to the creation of this entry.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:search",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:mode",
        "path": "Extension.extension:mode",
        "short": "match | include - why this is in the result set",
        "definition": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
        "comment": "There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, 'match' takes precedence.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:mode",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:score",
        "path": "Extension.extension:score",
        "short": "Search ranking (between 0 and 1)",
        "definition": "When searching, the server's search ranking score for the entry.",
        "comment": "Servers are not required to return a ranking score. 1 is most relevant, and 0 is least relevant. Often, search results are sorted by score, but the client may specify a different sort order.\n\nSee [Patient Match](patient-operation-match.html) for the EMPI search which relates to this element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:score",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:request",
        "path": "Extension.extension:request",
        "short": "Additional execution information (transaction/batch/history)",
        "definition": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:request",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:method",
        "path": "Extension.extension:method",
        "short": "GET | HEAD | POST | PUT | DELETE | PATCH",
        "definition": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:method",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:url",
        "path": "Extension.extension:url",
        "short": "URL for HTTP equivalent of this entry",
        "definition": "The URL for this entry, relative to the root (the address to which the request is posted).",
        "comment": "E.g. for a Patient Create, the method would be \"POST\" and the URL would be \"Patient\". For a Patient Update, the method would be PUT and the URL would be \"Patient/[id]\".",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:url",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:ifNoneMatch",
        "path": "Extension.extension:ifNoneMatch",
        "short": "For managing cache validation",
        "definition": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:ifNoneMatch",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:ifModifiedSince",
        "path": "Extension.extension:ifModifiedSince",
        "short": "For managing cache currency",
        "definition": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:ifModifiedSince",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:ifMatch",
        "path": "Extension.extension:ifMatch",
        "short": "For managing update contention",
        "definition": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:ifMatch",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:ifNoneExist",
        "path": "Extension.extension:ifNoneExist",
        "short": "For conditional creates",
        "definition": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:ifNoneExist",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:response",
        "path": "Extension.extension:response",
        "short": "Results of execution (transaction/batch/history)",
        "definition": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:response",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:status",
        "path": "Extension.extension:status",
        "short": "Status response code (text optional)",
        "definition": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:status",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:location",
        "path": "Extension.extension:location",
        "short": "The location (if the operation returns a location)",
        "definition": "The location header created by processing this operation, populated if the operation returns a location.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:location",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:etag",
        "path": "Extension.extension:etag",
        "short": "The Etag for the resource (if relevant)",
        "definition": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
        "comment": "Etags match the Resource.meta.versionId. The ETag has to match the version id in the header if a resource is included.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:etag",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:lastModified",
        "path": "Extension.extension:lastModified",
        "short": "Server's date time modified",
        "definition": "The date/time that the resource was modified on the server.",
        "comment": "This has to match the same time in the meta header (meta.lastUpdated) if a resource is included.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:lastModified",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:outcome",
        "path": "Extension.extension:outcome",
        "short": "OperationOutcome with hints and warnings (for batch/transaction)",
        "definition": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
        "comment": "For a POST/PUT operation, this is the equivalent outcome that would be returned for prefer = operationoutcome - except that the resource is always returned whether or not the outcome is returned.\n\nThis outcome is not used for error responses in batch/transaction, only for hints and warnings. In a batch operation, the error will be in Bundle.entry.response, and for transaction, there will be a single OperationOutcome instead of a bundle in the case of an error.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:outcome",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Extension",
        "short": "Entry in the bundle - will have a resource or information",
        "definition": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
        "comment": "R5 `Bundle.entry` maps as Equivalent to R4 `Bundle.entry`",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:link",
        "short": "Links related to this entry",
        "definition": "A series of links that provide context to this entry.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:link.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:link.url",
        "fixedUri": "link"
      },
      {
        "path": "Extension.extension:fullUrl",
        "short": "URI for resource (e.g. the absolute URL server address, URI for UUID/OID, etc.)",
        "definition": "The Absolute URL for the resource. Except for transactions and batches, each entry in a Bundle must have a fullUrl. The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. Even when not required, fullUrl MAY be set to a urn:uuid to allow referencing entries in a transaction. The fullUrl can be an arbitrary URI and is not limited to urn:uuid, urn:oid, http, and https. The fullUrl element SHALL have a value except when: \n* invoking a create\n* invoking or responding to an operation where the body is not a single identified resource\n* invoking or returning the results of a search or history operation.",
        "comment": "fullUrl might not be [unique in the context of a resource](bundle.html#bundle-unique). Note that since [FHIR resources do not need to be served through the FHIR API](references.html), the fullURL might be a URN or an absolute URL that does not end with the logical id of the resource (Resource.id). However, but if the fullUrl does look like a RESTful server URL (e.g. meets the [regex](references.html#regex), then the 'id' portion of the fullUrl SHALL end with the Resource.id.\n\nNote that the fullUrl is not the same as the canonical URL - it's an absolute url for an endpoint serving the resource (these will happen to have the same value on the canonical server for the resource with the canonical URL).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:fullUrl.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:fullUrl.url",
        "fixedUri": "fullUrl"
      },
      {
        "path": "Extension.extension:resource",
        "short": "A resource in the bundle",
        "definition": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type. This is allowed to be a Parameters resource if and only if it is referenced by something else within the Bundle that provides context/meaning.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:resource.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:resource.url",
        "fixedUri": "resource"
      },
      {
        "path": "Extension.extension:search",
        "short": "Search related information",
        "definition": "Information about the search process that lead to the creation of this entry.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:search.extension:mode",
        "short": "match | include - why this is in the result set",
        "definition": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
        "comment": "There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, 'match' takes precedence.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:search.extension:mode.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:search.extension:mode.url",
        "fixedUri": "mode"
      },
      {
        "path": "Extension.extension:search.extension:score",
        "short": "Search ranking (between 0 and 1)",
        "definition": "When searching, the server's search ranking score for the entry.",
        "comment": "Servers are not required to return a ranking score. 1 is most relevant, and 0 is least relevant. Often, search results are sorted by score, but the client may specify a different sort order.\n\nSee [Patient Match](patient-operation-match.html) for the EMPI search which relates to this element.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:search.extension:score.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:search.extension:score.url",
        "fixedUri": "score"
      },
      {
        "path": "Extension.extension:search.url",
        "fixedUri": "search"
      },
      {
        "path": "Extension.extension:mode",
        "short": "match | include - why this is in the result set",
        "definition": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
        "comment": "There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, 'match' takes precedence.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:mode.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:mode.url",
        "fixedUri": "mode"
      },
      {
        "path": "Extension.extension:score",
        "short": "Search ranking (between 0 and 1)",
        "definition": "When searching, the server's search ranking score for the entry.",
        "comment": "Servers are not required to return a ranking score. 1 is most relevant, and 0 is least relevant. Often, search results are sorted by score, but the client may specify a different sort order.\n\nSee [Patient Match](patient-operation-match.html) for the EMPI search which relates to this element.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:score.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:score.url",
        "fixedUri": "score"
      },
      {
        "path": "Extension.extension:request",
        "short": "Additional execution information (transaction/batch/history)",
        "definition": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:method",
        "short": "GET | HEAD | POST | PUT | DELETE | PATCH",
        "definition": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:method.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:method.url",
        "fixedUri": "method"
      },
      {
        "path": "Extension.extension:request.extension:url",
        "short": "URL for HTTP equivalent of this entry",
        "definition": "The URL for this entry, relative to the root (the address to which the request is posted).",
        "comment": "E.g. for a Patient Create, the method would be \"POST\" and the URL would be \"Patient\". For a Patient Update, the method would be PUT and the URL would be \"Patient/[id]\".",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:url.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:url.url",
        "fixedUri": "url"
      },
      {
        "path": "Extension.extension:request.extension:ifNoneMatch",
        "short": "For managing cache validation",
        "definition": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:ifNoneMatch.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:ifNoneMatch.url",
        "fixedUri": "ifNoneMatch"
      },
      {
        "path": "Extension.extension:request.extension:ifModifiedSince",
        "short": "For managing cache currency",
        "definition": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:ifModifiedSince.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:ifModifiedSince.url",
        "fixedUri": "ifModifiedSince"
      },
      {
        "path": "Extension.extension:request.extension:ifMatch",
        "short": "For managing update contention",
        "definition": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:ifMatch.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:ifMatch.url",
        "fixedUri": "ifMatch"
      },
      {
        "path": "Extension.extension:request.extension:ifNoneExist",
        "short": "For conditional creates",
        "definition": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:request.extension:ifNoneExist.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:request.extension:ifNoneExist.url",
        "fixedUri": "ifNoneExist"
      },
      {
        "path": "Extension.extension:request.url",
        "fixedUri": "request"
      },
      {
        "path": "Extension.extension:method",
        "short": "GET | HEAD | POST | PUT | DELETE | PATCH",
        "definition": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:method.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:method.url",
        "fixedUri": "method"
      },
      {
        "path": "Extension.extension:url",
        "short": "URL for HTTP equivalent of this entry",
        "definition": "The URL for this entry, relative to the root (the address to which the request is posted).",
        "comment": "E.g. for a Patient Create, the method would be \"POST\" and the URL would be \"Patient\". For a Patient Update, the method would be PUT and the URL would be \"Patient/[id]\".",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:url.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:url.url",
        "fixedUri": "url"
      },
      {
        "path": "Extension.extension:ifNoneMatch",
        "short": "For managing cache validation",
        "definition": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:ifNoneMatch.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:ifNoneMatch.url",
        "fixedUri": "ifNoneMatch"
      },
      {
        "path": "Extension.extension:ifModifiedSince",
        "short": "For managing cache currency",
        "definition": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:ifModifiedSince.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:ifModifiedSince.url",
        "fixedUri": "ifModifiedSince"
      },
      {
        "path": "Extension.extension:ifMatch",
        "short": "For managing update contention",
        "definition": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:ifMatch.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:ifMatch.url",
        "fixedUri": "ifMatch"
      },
      {
        "path": "Extension.extension:ifNoneExist",
        "short": "For conditional creates",
        "definition": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:ifNoneExist.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:ifNoneExist.url",
        "fixedUri": "ifNoneExist"
      },
      {
        "path": "Extension.extension:response",
        "short": "Results of execution (transaction/batch/history)",
        "definition": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:status",
        "short": "Status response code (text optional)",
        "definition": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:status.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:response.extension:status.url",
        "fixedUri": "status"
      },
      {
        "path": "Extension.extension:response.extension:location",
        "short": "The location (if the operation returns a location)",
        "definition": "The location header created by processing this operation, populated if the operation returns a location.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:location.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:response.extension:location.url",
        "fixedUri": "location"
      },
      {
        "path": "Extension.extension:response.extension:etag",
        "short": "The Etag for the resource (if relevant)",
        "definition": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
        "comment": "Etags match the Resource.meta.versionId. The ETag has to match the version id in the header if a resource is included.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:etag.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:response.extension:etag.url",
        "fixedUri": "etag"
      },
      {
        "path": "Extension.extension:response.extension:lastModified",
        "short": "Server's date time modified",
        "definition": "The date/time that the resource was modified on the server.",
        "comment": "This has to match the same time in the meta header (meta.lastUpdated) if a resource is included.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:lastModified.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:response.extension:lastModified.url",
        "fixedUri": "lastModified"
      },
      {
        "path": "Extension.extension:response.extension:outcome",
        "short": "OperationOutcome with hints and warnings (for batch/transaction)",
        "definition": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
        "comment": "For a POST/PUT operation, this is the equivalent outcome that would be returned for prefer = operationoutcome - except that the resource is always returned whether or not the outcome is returned.\n\nThis outcome is not used for error responses in batch/transaction, only for hints and warnings. In a batch operation, the error will be in Bundle.entry.response, and for transaction, there will be a single OperationOutcome instead of a bundle in the case of an error.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:response.extension:outcome.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:response.extension:outcome.url",
        "fixedUri": "outcome"
      },
      {
        "path": "Extension.extension:response.url",
        "fixedUri": "response"
      },
      {
        "path": "Extension.extension:status",
        "short": "Status response code (text optional)",
        "definition": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:status.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:status.url",
        "fixedUri": "status"
      },
      {
        "path": "Extension.extension:location",
        "short": "The location (if the operation returns a location)",
        "definition": "The location header created by processing this operation, populated if the operation returns a location.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:location.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:location.url",
        "fixedUri": "location"
      },
      {
        "path": "Extension.extension:etag",
        "short": "The Etag for the resource (if relevant)",
        "definition": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
        "comment": "Etags match the Resource.meta.versionId. The ETag has to match the version id in the header if a resource is included.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:etag.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:etag.url",
        "fixedUri": "etag"
      },
      {
        "path": "Extension.extension:lastModified",
        "short": "Server's date time modified",
        "definition": "The date/time that the resource was modified on the server.",
        "comment": "This has to match the same time in the meta header (meta.lastUpdated) if a resource is included.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:lastModified.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:lastModified.url",
        "fixedUri": "lastModified"
      },
      {
        "path": "Extension.extension:outcome",
        "short": "OperationOutcome with hints and warnings (for batch/transaction)",
        "definition": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
        "comment": "For a POST/PUT operation, this is the equivalent outcome that would be returned for prefer = operationoutcome - except that the resource is always returned whether or not the outcome is returned.\n\nThis outcome is not used for error responses in batch/transaction, only for hints and warnings. In a batch operation, the error will be in Bundle.entry.response, and for transaction, there will be a single OperationOutcome instead of a bundle in the case of an error.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:outcome.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:outcome.url",
        "fixedUri": "outcome"
      },
      {
        "path": "Extension.url",
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Bundle.entry"
      }
    ]
  }
}