{
  "resourceType": "StructureDefinition",
  "id": "SpecimenDefinition.typeTested",
  "url": "http://hl7.org/fhir/5.0/StructureDefinition/extension-SpecimenDefinition.typeTested",
  "name": "XVerExtensionSpecimenDefinition.typeTested",
  "title": "Cross-Version Extension for FHIR R5:SpecimenDefinition.typeTested compared to FHIR R4",
  "status": "draft",
  "experimental": true,
  "description": "R5 `SpecimenDefinition.typeTested` maps as Equivalent to R4 `SpecimenDefinition.typeTested`",
  "fhirVersion": "5.0.0",
  "kind": "complex-type",
  "abstract": false,
  "context": [
    {
      "type": "element",
      "expression": "SpecimenDefinition.typeTested"
    }
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
            "valueCode": "normative"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version",
            "valueCode": "4.0.0"
          }
        ],
        "path": "Extension",
        "short": "Specimen in container intended for testing by lab",
        "definition": "Specimen conditioned in a container as expected by the testing laboratory.",
        "comment": "R5 `SpecimenDefinition.typeTested` maps as Equivalent to R4 `SpecimenDefinition.typeTested`",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a,N/A"
          }
        ]
      },
      {
        "id": "Extension.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "Unique id for inter-element referencing",
        "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "id"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "condition": [
          "ele-1"
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.extension",
        "path": "Extension.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comment": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "uri"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-SpecimenDefinition.typeTested",
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.value[x]",
        "path": "Extension.value[x]",
        "short": "Value of extension",
        "definition": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          },
          {
            "code": "boolean"
          },
          {
            "code": "canonical"
          },
          {
            "code": "code"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "decimal"
          },
          {
            "code": "id"
          },
          {
            "code": "instant"
          },
          {
            "code": "integer"
          },
          {
            "code": "integer64"
          },
          {
            "code": "markdown"
          },
          {
            "code": "oid"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "string"
          },
          {
            "code": "time"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "uri"
          },
          {
            "code": "url"
          },
          {
            "code": "uuid"
          },
          {
            "code": "Address"
          },
          {
            "code": "Age"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "CodeableReference"
          },
          {
            "code": "Coding"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Count"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Duration"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "Money"
          },
          {
            "code": "Period"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Range"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "RatioRange"
          },
          {
            "code": "Reference"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "Timing"
          },
          {
            "code": "ContactDetail"
          },
          {
            "code": "DataRequirement"
          },
          {
            "code": "Expression"
          },
          {
            "code": "ParameterDefinition"
          },
          {
            "code": "RelatedArtifact"
          },
          {
            "code": "TriggerDefinition"
          },
          {
            "code": "UsageContext"
          },
          {
            "code": "Availability"
          },
          {
            "code": "ExtendedContactDetail"
          },
          {
            "code": "Dosage"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "ext-1"
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.extension:isDerived",
        "path": "Extension.extension:isDerived",
        "short": "Primary or secondary specimen",
        "definition": "Primary of secondary specimen.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:isDerived",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:type",
        "path": "Extension.extension:type",
        "short": "Type of intended specimen",
        "definition": "The kind of specimen conditioned for testing expected by lab.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:type",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:preference",
        "path": "Extension.extension:preference",
        "short": "preferred | alternate",
        "definition": "The preference for this type of conditioned specimen.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:preference",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:container",
        "path": "Extension.extension:container",
        "short": "The specimen's container",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:container",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:material",
        "path": "Extension.extension:material",
        "short": "The material type used for the container",
        "definition": "The type of material of the container.",
        "comment": "Examples: glass, plastic, metal.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:material",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:type",
        "path": "Extension.extension:type",
        "short": "Kind of container associated with the kind of specimen",
        "definition": "The type of container used to contain this kind of specimen.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:type",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:cap",
        "path": "Extension.extension:cap",
        "short": "Color of container cap",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:cap",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:description",
        "path": "Extension.extension:description",
        "short": "The description of the kind of container",
        "definition": "The textual description of the kind of container.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:description",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:capacity",
        "path": "Extension.extension:capacity",
        "short": "The capacity of this kind of container",
        "definition": "The capacity (volume or other measure) of this kind of container.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:capacity",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:minimumVolume[x]",
        "path": "Extension.extension:minimumVolume[x]",
        "short": "Minimum volume",
        "definition": "The minimum volume to be conditioned in the container.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:minimumVolume[x]",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:additive",
        "path": "Extension.extension:additive",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:additive",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:additive[x]",
        "path": "Extension.extension:additive[x]",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:additive[x]",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:preparation",
        "path": "Extension.extension:preparation",
        "short": "Special processing applied to the container for this specimen type",
        "definition": "Special processing that should be applied to the container for this kind of specimen.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:preparation",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:requirement",
        "path": "Extension.extension:requirement",
        "short": "Requirements for specimen delivery and special handling",
        "definition": "Requirements for delivery and special handling of this kind of conditioned specimen.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:requirement",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:retentionTime",
        "path": "Extension.extension:retentionTime",
        "short": "The usual time for retaining this kind of specimen",
        "definition": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:retentionTime",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:singleUse",
        "path": "Extension.extension:singleUse",
        "short": "Specimen for single use only",
        "definition": "Specimen can be used by only one test or panel if the value is \"true\".",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:singleUse",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:rejectionCriterion",
        "path": "Extension.extension:rejectionCriterion",
        "short": "Criterion specified for specimen rejection",
        "definition": "Criterion for rejection of the specimen in its container by the laboratory.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:rejectionCriterion",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:handling",
        "path": "Extension.extension:handling",
        "short": "Specimen handling before testing",
        "definition": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:handling",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:temperatureQualifier",
        "path": "Extension.extension:temperatureQualifier",
        "short": "Qualifies the interval of temperature",
        "definition": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:temperatureQualifier",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:temperatureRange",
        "path": "Extension.extension:temperatureRange",
        "short": "Temperature range for these handling instructions",
        "definition": "The temperature interval for this set of handling instructions.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:temperatureRange",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:maxDuration",
        "path": "Extension.extension:maxDuration",
        "short": "Maximum preservation time",
        "definition": "The maximum time interval of preservation of the specimen with these conditions.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:maxDuration",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:instruction",
        "path": "Extension.extension:instruction",
        "short": "Preservation instruction",
        "definition": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:instruction",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:testingDestination",
        "path": "Extension.extension:testingDestination",
        "short": "Where the specimen will be tested",
        "definition": "Where the specimen will be tested: e.g., lab, sector, device or any combination of these.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:testingDestination",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Extension",
        "short": "Specimen in container intended for testing by lab",
        "definition": "Specimen conditioned in a container as expected by the testing laboratory.",
        "comment": "R5 `SpecimenDefinition.typeTested` maps as Equivalent to R4 `SpecimenDefinition.typeTested`",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:isDerived",
        "short": "Primary or secondary specimen",
        "definition": "Primary of secondary specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:isDerived.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:isDerived.url",
        "fixedUri": "isDerived"
      },
      {
        "path": "Extension.extension:type",
        "short": "Type of intended specimen",
        "definition": "The kind of specimen conditioned for testing expected by lab.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:type.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:type.url",
        "fixedUri": "type"
      },
      {
        "path": "Extension.extension:preference",
        "short": "preferred | alternate",
        "definition": "The preference for this type of conditioned specimen.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:preference.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:preference.url",
        "fixedUri": "preference"
      },
      {
        "path": "Extension.extension:container",
        "short": "The specimen's container",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:material",
        "short": "The material type used for the container",
        "definition": "The type of material of the container.",
        "comment": "Examples: glass, plastic, metal.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:material.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:material.url",
        "fixedUri": "material"
      },
      {
        "path": "Extension.extension:container.extension:type",
        "short": "Kind of container associated with the kind of specimen",
        "definition": "The type of container used to contain this kind of specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:type.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:type.url",
        "fixedUri": "type"
      },
      {
        "path": "Extension.extension:container.extension:cap",
        "short": "Color of container cap",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:cap.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:cap.url",
        "fixedUri": "cap"
      },
      {
        "path": "Extension.extension:container.extension:description",
        "short": "The description of the kind of container",
        "definition": "The textual description of the kind of container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:description.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:description.url",
        "fixedUri": "description"
      },
      {
        "path": "Extension.extension:container.extension:capacity",
        "short": "The capacity of this kind of container",
        "definition": "The capacity (volume or other measure) of this kind of container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:capacity.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:capacity.url",
        "fixedUri": "capacity"
      },
      {
        "path": "Extension.extension:container.extension:minimumVolume[x]",
        "short": "Minimum volume",
        "definition": "The minimum volume to be conditioned in the container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:minimumVolume[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:minimumVolume[x].url",
        "fixedUri": "minimumVolume%5Bx%5D"
      },
      {
        "path": "Extension.extension:container.extension:additive",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:additive.extension:additive[x]",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:additive.extension:additive[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:additive.extension:additive[x].extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:container.extension:additive.extension:additive[x].url",
        "fixedUri": "additive%5Bx%5D"
      },
      {
        "path": "Extension.extension:container.extension:additive.url",
        "fixedUri": "additive"
      },
      {
        "path": "Extension.extension:container.extension:additive[x]",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:additive[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:additive[x].extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:container.extension:additive[x].url",
        "fixedUri": "additive%5Bx%5D"
      },
      {
        "path": "Extension.extension:container.extension:preparation",
        "short": "Special processing applied to the container for this specimen type",
        "definition": "Special processing that should be applied to the container for this kind of specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:container.extension:preparation.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:container.extension:preparation.url",
        "fixedUri": "preparation"
      },
      {
        "path": "Extension.extension:container.url",
        "fixedUri": "container"
      },
      {
        "path": "Extension.extension:material",
        "short": "The material type used for the container",
        "definition": "The type of material of the container.",
        "comment": "Examples: glass, plastic, metal.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:material.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:material.url",
        "fixedUri": "material"
      },
      {
        "path": "Extension.extension:type",
        "short": "Kind of container associated with the kind of specimen",
        "definition": "The type of container used to contain this kind of specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:type.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:type.url",
        "fixedUri": "type"
      },
      {
        "path": "Extension.extension:cap",
        "short": "Color of container cap",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:cap.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:cap.url",
        "fixedUri": "cap"
      },
      {
        "path": "Extension.extension:description",
        "short": "The description of the kind of container",
        "definition": "The textual description of the kind of container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:description.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:description.url",
        "fixedUri": "description"
      },
      {
        "path": "Extension.extension:capacity",
        "short": "The capacity of this kind of container",
        "definition": "The capacity (volume or other measure) of this kind of container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:capacity.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:capacity.url",
        "fixedUri": "capacity"
      },
      {
        "path": "Extension.extension:minimumVolume[x]",
        "short": "Minimum volume",
        "definition": "The minimum volume to be conditioned in the container.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:minimumVolume[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:minimumVolume[x].url",
        "fixedUri": "minimumVolume%5Bx%5D"
      },
      {
        "path": "Extension.extension:additive",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:additive.extension:additive[x]",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:additive.extension:additive[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:additive.extension:additive[x].extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:additive.extension:additive[x].url",
        "fixedUri": "additive%5Bx%5D"
      },
      {
        "path": "Extension.extension:additive.url",
        "fixedUri": "additive"
      },
      {
        "path": "Extension.extension:additive[x]",
        "short": "Additive associated with container",
        "definition": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:additive[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:additive[x].extension:Reference",
        "sliceName": "Reference",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Reference"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:additive[x].url",
        "fixedUri": "additive%5Bx%5D"
      },
      {
        "path": "Extension.extension:preparation",
        "short": "Special processing applied to the container for this specimen type",
        "definition": "Special processing that should be applied to the container for this kind of specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:preparation.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:preparation.url",
        "fixedUri": "preparation"
      },
      {
        "path": "Extension.extension:requirement",
        "short": "Requirements for specimen delivery and special handling",
        "definition": "Requirements for delivery and special handling of this kind of conditioned specimen.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:requirement.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:requirement.url",
        "fixedUri": "requirement"
      },
      {
        "path": "Extension.extension:retentionTime",
        "short": "The usual time for retaining this kind of specimen",
        "definition": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:retentionTime.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:retentionTime.url",
        "fixedUri": "retentionTime"
      },
      {
        "path": "Extension.extension:singleUse",
        "short": "Specimen for single use only",
        "definition": "Specimen can be used by only one test or panel if the value is \"true\".",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:singleUse.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:singleUse.extension:boolean",
        "sliceName": "boolean",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-boolean"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:singleUse.url",
        "fixedUri": "singleUse"
      },
      {
        "path": "Extension.extension:rejectionCriterion",
        "short": "Criterion specified for specimen rejection",
        "definition": "Criterion for rejection of the specimen in its container by the laboratory.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:rejectionCriterion.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:rejectionCriterion.url",
        "fixedUri": "rejectionCriterion"
      },
      {
        "path": "Extension.extension:handling",
        "short": "Specimen handling before testing",
        "definition": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:handling.extension:temperatureQualifier",
        "short": "Qualifies the interval of temperature",
        "definition": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:handling.extension:temperatureQualifier.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:handling.extension:temperatureQualifier.url",
        "fixedUri": "temperatureQualifier"
      },
      {
        "path": "Extension.extension:handling.extension:temperatureRange",
        "short": "Temperature range for these handling instructions",
        "definition": "The temperature interval for this set of handling instructions.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:handling.extension:temperatureRange.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:handling.extension:temperatureRange.url",
        "fixedUri": "temperatureRange"
      },
      {
        "path": "Extension.extension:handling.extension:maxDuration",
        "short": "Maximum preservation time",
        "definition": "The maximum time interval of preservation of the specimen with these conditions.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:handling.extension:maxDuration.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:handling.extension:maxDuration.url",
        "fixedUri": "maxDuration"
      },
      {
        "path": "Extension.extension:handling.extension:instruction",
        "short": "Preservation instruction",
        "definition": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:handling.extension:instruction.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:handling.extension:instruction.url",
        "fixedUri": "instruction"
      },
      {
        "path": "Extension.extension:handling.url",
        "fixedUri": "handling"
      },
      {
        "path": "Extension.extension:temperatureQualifier",
        "short": "Qualifies the interval of temperature",
        "definition": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:temperatureQualifier.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:temperatureQualifier.url",
        "fixedUri": "temperatureQualifier"
      },
      {
        "path": "Extension.extension:temperatureRange",
        "short": "Temperature range for these handling instructions",
        "definition": "The temperature interval for this set of handling instructions.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:temperatureRange.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:temperatureRange.url",
        "fixedUri": "temperatureRange"
      },
      {
        "path": "Extension.extension:maxDuration",
        "short": "Maximum preservation time",
        "definition": "The maximum time interval of preservation of the specimen with these conditions.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:maxDuration.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:maxDuration.url",
        "fixedUri": "maxDuration"
      },
      {
        "path": "Extension.extension:instruction",
        "short": "Preservation instruction",
        "definition": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:instruction.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:instruction.url",
        "fixedUri": "instruction"
      },
      {
        "path": "Extension.extension:testingDestination",
        "short": "Where the specimen will be tested",
        "definition": "Where the specimen will be tested: e.g., lab, sector, device or any combination of these.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:testingDestination.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:testingDestination.extension:CodeableConcept",
        "sliceName": "CodeableConcept",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-CodeableConcept"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:testingDestination.url",
        "fixedUri": "testingDestination"
      },
      {
        "path": "Extension.url",
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-SpecimenDefinition.typeTested"
      }
    ]
  }
}