{
  "resourceType": "StructureDefinition",
  "id": "Questionnaire.item",
  "url": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Questionnaire.item",
  "name": "XVerExtensionQuestionnaire.item",
  "title": "Cross-Version Extension for FHIR R5:Questionnaire.item compared to FHIR R4",
  "status": "draft",
  "experimental": true,
  "description": "R5 `Questionnaire.item` maps as Equivalent to R4 `Questionnaire.item`",
  "fhirVersion": "5.0.0",
  "kind": "complex-type",
  "abstract": false,
  "context": [
    {
      "type": "element",
      "expression": "Questionnaire.item"
    }
  ],
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension",
  "derivation": "constraint",
  "snapshot": {
    "element": [
      {
        "id": "Extension",
        "extension": [
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
            "valueCode": "normative"
          },
          {
            "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-normative-version",
            "valueCode": "4.0.0"
          }
        ],
        "path": "Extension",
        "short": "Questions and sections within the Questionnaire",
        "definition": "A particular question, question grouping or display text that is part of the questionnaire.",
        "comment": "R5 `Questionnaire.item` maps as Equivalent to R4 `Questionnaire.item`\nThe content of the questionnaire is constructed from an ordered, hierarchical collection of items.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension",
          "min": 0,
          "max": "*"
        },
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a,N/A"
          }
        ]
      },
      {
        "id": "Extension.id",
        "path": "Extension.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "Unique id for inter-element referencing",
        "definition": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Element.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "id"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "condition": [
          "ele-1"
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.extension",
        "path": "Extension.extension",
        "slicing": {
          "discriminator": [
            {
              "type": "value",
              "path": "url"
            }
          ],
          "description": "Extensions are always sliced by (at least) url",
          "rules": "open"
        },
        "short": "Additional content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "comment": "There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Element.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          },
          {
            "key": "ext-1",
            "severity": "error",
            "human": "Must have either extensions or value[x], not both",
            "expression": "extension.exists() != value.exists()",
            "source": "http://hl7.org/fhir/StructureDefinition/Extension"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "id": "Extension.url",
        "path": "Extension.url",
        "representation": [
          "xmlAttr"
        ],
        "short": "identifies the meaning of the extension",
        "definition": "Source of the definition for the extension code - a logical name or a URL.",
        "comment": "The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.url",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "extension": [
              {
                "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type",
                "valueUrl": "uri"
              }
            ],
            "code": "http://hl7.org/fhirpath/System.String"
          }
        ],
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Questionnaire.item",
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.value[x]",
        "path": "Extension.value[x]",
        "short": "Value of extension",
        "definition": "Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.value[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "base64Binary"
          },
          {
            "code": "boolean"
          },
          {
            "code": "canonical"
          },
          {
            "code": "code"
          },
          {
            "code": "date"
          },
          {
            "code": "dateTime"
          },
          {
            "code": "decimal"
          },
          {
            "code": "id"
          },
          {
            "code": "instant"
          },
          {
            "code": "integer"
          },
          {
            "code": "integer64"
          },
          {
            "code": "markdown"
          },
          {
            "code": "oid"
          },
          {
            "code": "positiveInt"
          },
          {
            "code": "string"
          },
          {
            "code": "time"
          },
          {
            "code": "unsignedInt"
          },
          {
            "code": "uri"
          },
          {
            "code": "url"
          },
          {
            "code": "uuid"
          },
          {
            "code": "Address"
          },
          {
            "code": "Age"
          },
          {
            "code": "Annotation"
          },
          {
            "code": "Attachment"
          },
          {
            "code": "CodeableConcept"
          },
          {
            "code": "CodeableReference"
          },
          {
            "code": "Coding"
          },
          {
            "code": "ContactPoint"
          },
          {
            "code": "Count"
          },
          {
            "code": "Distance"
          },
          {
            "code": "Duration"
          },
          {
            "code": "HumanName"
          },
          {
            "code": "Identifier"
          },
          {
            "code": "Money"
          },
          {
            "code": "Period"
          },
          {
            "code": "Quantity"
          },
          {
            "code": "Range"
          },
          {
            "code": "Ratio"
          },
          {
            "code": "RatioRange"
          },
          {
            "code": "Reference"
          },
          {
            "code": "SampledData"
          },
          {
            "code": "Signature"
          },
          {
            "code": "Timing"
          },
          {
            "code": "ContactDetail"
          },
          {
            "code": "DataRequirement"
          },
          {
            "code": "Expression"
          },
          {
            "code": "ParameterDefinition"
          },
          {
            "code": "RelatedArtifact"
          },
          {
            "code": "TriggerDefinition"
          },
          {
            "code": "UsageContext"
          },
          {
            "code": "Availability"
          },
          {
            "code": "ExtendedContactDetail"
          },
          {
            "code": "Dosage"
          },
          {
            "code": "Meta"
          }
        ],
        "condition": [
          "ext-1"
        ],
        "constraint": [
          {
            "key": "ele-1",
            "severity": "error",
            "human": "All FHIR elements must have a @value or children",
            "expression": "hasValue() or (children().count() > id.count())",
            "source": "http://hl7.org/fhir/StructureDefinition/Element"
          }
        ],
        "isModifier": false,
        "isSummary": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "id": "Extension.extension:linkId",
        "path": "Extension.extension:linkId",
        "short": "Unique id for item in questionnaire",
        "definition": "An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.",
        "comment": "This ''can'' be a meaningful identifier (e.g. a LOINC code) but is not intended to have any meaning.  GUIDs or sequential numbers are appropriate here.\n\nLinkIds can have whitespaces and slashes by design. Tooling should not rely on linkIds being valid XHTML element IDs, and should not directly embed them as such",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:linkId",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:definition",
        "path": "Extension.extension:definition",
        "short": "ElementDefinition - details for the item",
        "definition": "This element is a URI that refers to an [ElementDefinition](elementdefinition.html) or to an [ObservationDefinition](observationdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in [Comments](questionnaire.html#definition), below.",
        "comment": "The uri refers to an ElementDefinition in a [StructureDefinition](structuredefinition.html#) or to an [ObservationDefinition](observationdefinition.html) and always starts with the [canonical URL](references.html#canonical) for the target resource. When referring to a StructureDefinition, a fragment identifier is used to specify the element definition by its id [Element.id](types-definitions.html#Element.id). E.g. http://hl7.org/fhir/StructureDefinition/Observation#Observation.value[x]. In the absence of a fragment identifier, the first/root element definition in the target is the matching element definition.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:definition",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:code",
        "path": "Extension.extension:code",
        "short": "Corresponding concept for this item in a terminology",
        "definition": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).",
        "comment": "The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:code",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:prefix",
        "path": "Extension.extension:prefix",
        "short": "E.g. \"1(a)\", \"2.5.3\"",
        "definition": "A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.",
        "comment": "These are generally unique within a questionnaire, though this is not guaranteed. Some questionnaires may have multiple questions with the same label with logic to control which gets exposed.  Typically, these won't be used for \"display\" items, though such use is not prohibited.  Systems SHOULD NOT generate their own prefixes if prefixes are defined for any items within a Questionnaire.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:prefix",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:text",
        "path": "Extension.extension:text",
        "short": "Primary text for the item",
        "definition": "The name of a section, the text of a question or text content for a display item.",
        "comment": "When using this element to represent the name of a section, use group type item and also make sure to limit the text element to a short string suitable for display as a section heading.  Group item instructions should be included as a display type item within the group.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:text",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:type",
        "path": "Extension.extension:type",
        "short": "group | display | boolean | decimal | integer | date | dateTime +",
        "definition": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, Coding, etc.).",
        "comment": "Additional constraints on the type of answer can be conveyed by extensions. The value may come from the ElementDefinition referred to by .definition.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:type",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:enableWhen",
        "path": "Extension.extension:enableWhen",
        "short": "Only allow data when",
        "definition": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.",
        "comment": "If multiple repetitions of this extension are present, the interpretation is driven by enableBehavior (either all repetitions must evaluate to true for this item to be enabled, or only one must evaluate to true for the item to be enabled).  If the enableWhen.question has multiple answers, the condition evaluates to true if *any* of the answers for the referenced item match the enableWhen condition.  This element is a modifier because if enableWhen is present for an item, \"required\" is ignored unless one of the enableWhen conditions is met. When an item is disabled, all of its descendants are disabled, regardless of what their own enableWhen logic might evaluate to.  If enableWhen logic depends on an item that is disabled, the logic should proceed as though the item is not valued - even if a default value or other value might be retained in memory in the event of the item being re-enabled.  In some cases, the comparison between the indicated answer and the specified value may differ only by precision.  For example, the enableWhen might be Q1 > 1970, but the answer to Q1 is 1970-10-15.  There is not a clear answer as to whether 1970-10-15 should be considered 'greater' than 1970, given that it is an imprecise value.  In these indeterminate situations, the form filler has the option of refusing to render the form.  If the form **is** displayed, items where enableWhen is indeterminate SHOULD be treated as enabled with a warning indicating that the questionnaire logic was faulty and it is possible that the item should not be enabled.  Questionnaires SHOULD be designed to take into account challenges around varying precision to minimize non-deterministic situations by setting constraints around expected precision, etc.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:enableWhen",
          "min": 0,
          "max": "*"
        },
        "isModifier": true
      },
      {
        "id": "Extension.extension:question",
        "path": "Extension.extension:question",
        "short": "The linkId of question that determines whether item is enabled/disabled",
        "definition": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.",
        "comment": "If multiple question occurrences are present for the same question (same linkId), then this refers to the nearest question occurrence reachable by tracing first the \"ancestor\" axis and then the \"preceding\" axis and then the \"following\" axis.  If there are multiple items with the same linkId and all are equadistant (e.g. a question references a question that appears in a separate repeating group), that is an error.  (Consider using the enableWhenExpression extension to define logic to handle such a situation.)",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:question",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:operator",
        "path": "Extension.extension:operator",
        "short": "exists | = | != | > | < | >= | <=",
        "definition": "Specifies the criteria by which the question is enabled.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:operator",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:answer[x]",
        "path": "Extension.extension:answer[x]",
        "short": "Value for question comparison based on operator",
        "definition": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:answer[x]",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:enableBehavior",
        "path": "Extension.extension:enableBehavior",
        "short": "all | any",
        "definition": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.",
        "comment": "This element must be specified if more than one enableWhen value is provided.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:enableBehavior",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:disabledDisplay",
        "path": "Extension.extension:disabledDisplay",
        "short": "hidden | protected",
        "definition": "Indicates if and how items that are disabled (because enableWhen evaluates to 'false') should be displayed.",
        "comment": "If not specified, rendering behavior is up to the client.  This element is only meaningful if enableWhen or an equivalent extension is present",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:disabledDisplay",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:required",
        "path": "Extension.extension:required",
        "short": "Whether the item must be included in data results",
        "definition": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.",
        "comment": "If the required item is a question, it must have a direct answer (i.e. an answer to the question itself, not merely answers to child questions) in order for the QuestionnaireResponse to be complete.  If the required item is a group, it must have at least one descendant question which has an answer  Questionnaire.item.required only has meaning for elements that are conditionally enabled with enableWhen if the condition evaluates to true.  It also only has meaning if the parent element is present.  If a non-required 'group' item contains a 'required' question item, it's completely fine to omit the group (because it's not required) despite it having a required child.  Similarly, if an item that contains other items is marked as required, that does not automatically make the contained elements required (though required groups must contain at least one descendant item with a populated answer). The value for 'required' may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:required",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:repeats",
        "path": "Extension.extension:repeats",
        "short": "Whether the item may repeat",
        "definition": "An indication, if true, that a QuestionnaireResponse for this item may include multiple answers associated with a single instance of this item (for question-type items) or multiple repetitions of the item (for group-type items).",
        "comment": "If a question is marked as repeats=true, then multiple answers can be provided for the question in the corresponding QuestionnaireResponse.  When rendering the questionnaire, it is up to the rendering software whether to render the question text for each answer repetition (i.e. \"repeat the question\") or to simply allow entry/selection of multiple answers for the question (repeat the answers).  Which is most appropriate visually may depend on the type of answer as well as whether there are nested items.\n\nThe resulting QuestionnaireResponse will be populated the same way regardless of rendering - one 'question' item with multiple answer values.\n\n The value may come from the ElementDefinition referred to by .definition.  When repeats=true for a group, it'll be represented with multiple items with the same linkId in the QuestionnaireResponse.  For a question, it'll be represented by a single item with that linkId with multiple answers.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:repeats",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:readOnly",
        "path": "Extension.extension:readOnly",
        "short": "Don't allow human editing",
        "definition": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.",
        "comment": "If specified on a 'group', then all items beneath the specified group are read only.  For questions, this only marks the answer associated with the specific item read only.  Descendant questions are not impacted.  The value of readOnly elements can be established by asserting extensions for defaultValues, linkages that support pre-population and/or extensions that support calculation based on other answers.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:readOnly",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:maxLength",
        "path": "Extension.extension:maxLength",
        "short": "No more than these many characters",
        "definition": "The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.",
        "comment": "For base64binary, reflects the number of characters representing the encoded data, not the number of bytes of the binary data. The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:maxLength",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:answerConstraint",
        "path": "Extension.extension:answerConstraint",
        "short": "optionsOnly | optionsOrType | optionsOrString",
        "definition": "For items that have a defined set of allowed answers (via answerOption or answerValueSet), indicates whether values *other* than those specified can be selected.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:answerConstraint",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:answerValueSet",
        "path": "Extension.extension:answerValueSet",
        "short": "ValueSet containing permitted answers",
        "definition": "A reference to a value set containing a list of values representing permitted answers for a question.",
        "comment": "LOINC defines many useful value sets for questionnaire responses. See [LOINC Answer Lists](https://terminology.hl7.org/LOINC.html). The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:answerValueSet",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:answerOption",
        "path": "Extension.extension:answerOption",
        "short": "Permitted answer",
        "definition": "One of the permitted answers for the question.",
        "comment": "This element can be used when the value set machinery of answerValueSet is deemed too cumbersome or when there's a need to capture possible answers that are not codes.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:answerOption",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:value[x]",
        "path": "Extension.extension:value[x]",
        "short": "Answer value",
        "definition": "A potential answer that's allowed as the answer to this question.",
        "comment": "The data type of the value must agree with the item.type.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:value[x]",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:initialSelected",
        "path": "Extension.extension:initialSelected",
        "short": "Whether option is selected by default",
        "definition": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Extension.extension:initialSelected",
          "min": 0,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:initial",
        "path": "Extension.extension:initial",
        "short": "Initial value(s) when item is first rendered",
        "definition": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.",
        "comment": "The user is allowed to change the value and override the default (unless marked as read-only). If the user doesn't change the value, then this initial value will be persisted when the QuestionnaireResponse is initially created.  Note that initial values can influence results.  The data type of initial.answer[x] must agree with the item.type, and only repeating items can have more then one initial value.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:initial",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:value[x]",
        "path": "Extension.extension:value[x]",
        "short": "Actual value for initializing the question",
        "definition": "The actual value to for an initial answer.",
        "comment": "The type of the initial value must be consistent with the type of the item.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Extension.extension:value[x]",
          "min": 1,
          "max": "1"
        },
        "isModifier": false
      },
      {
        "id": "Extension.extension:item",
        "path": "Extension.extension:item",
        "short": "Nested questionnaire items",
        "definition": "Text, questions and other groups to be nested beneath a question or group.",
        "comment": "There is no specified limit to the depth of nesting.  However, Questionnaire authors are encouraged to consider the impact on the user and user interface of overly deep nesting.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Extension.extension:item",
          "min": 0,
          "max": "*"
        },
        "isModifier": false
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Extension",
        "short": "Questions and sections within the Questionnaire",
        "definition": "A particular question, question grouping or display text that is part of the questionnaire.",
        "comment": "R5 `Questionnaire.item` maps as Equivalent to R4 `Questionnaire.item`\nThe content of the questionnaire is constructed from an ordered, hierarchical collection of items.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:linkId",
        "short": "Unique id for item in questionnaire",
        "definition": "An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.",
        "comment": "This ''can'' be a meaningful identifier (e.g. a LOINC code) but is not intended to have any meaning.  GUIDs or sequential numbers are appropriate here.\n\nLinkIds can have whitespaces and slashes by design. Tooling should not rely on linkIds being valid XHTML element IDs, and should not directly embed them as such",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:linkId.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:linkId.url",
        "fixedUri": "linkId"
      },
      {
        "path": "Extension.extension:definition",
        "short": "ElementDefinition - details for the item",
        "definition": "This element is a URI that refers to an [ElementDefinition](elementdefinition.html) or to an [ObservationDefinition](observationdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in [Comments](questionnaire.html#definition), below.",
        "comment": "The uri refers to an ElementDefinition in a [StructureDefinition](structuredefinition.html#) or to an [ObservationDefinition](observationdefinition.html) and always starts with the [canonical URL](references.html#canonical) for the target resource. When referring to a StructureDefinition, a fragment identifier is used to specify the element definition by its id [Element.id](types-definitions.html#Element.id). E.g. http://hl7.org/fhir/StructureDefinition/Observation#Observation.value[x]. In the absence of a fragment identifier, the first/root element definition in the target is the matching element definition.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:definition.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:definition.url",
        "fixedUri": "definition"
      },
      {
        "path": "Extension.extension:code",
        "short": "Corresponding concept for this item in a terminology",
        "definition": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).",
        "comment": "The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:code.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:code.url",
        "fixedUri": "code"
      },
      {
        "path": "Extension.extension:prefix",
        "short": "E.g. \"1(a)\", \"2.5.3\"",
        "definition": "A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.",
        "comment": "These are generally unique within a questionnaire, though this is not guaranteed. Some questionnaires may have multiple questions with the same label with logic to control which gets exposed.  Typically, these won't be used for \"display\" items, though such use is not prohibited.  Systems SHOULD NOT generate their own prefixes if prefixes are defined for any items within a Questionnaire.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:prefix.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:prefix.url",
        "fixedUri": "prefix"
      },
      {
        "path": "Extension.extension:text",
        "short": "Primary text for the item",
        "definition": "The name of a section, the text of a question or text content for a display item.",
        "comment": "When using this element to represent the name of a section, use group type item and also make sure to limit the text element to a short string suitable for display as a section heading.  Group item instructions should be included as a display type item within the group.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:text.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:text.url",
        "fixedUri": "text"
      },
      {
        "path": "Extension.extension:type",
        "short": "group | display | boolean | decimal | integer | date | dateTime +",
        "definition": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, Coding, etc.).",
        "comment": "Additional constraints on the type of answer can be conveyed by extensions. The value may come from the ElementDefinition referred to by .definition.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:type.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:type.url",
        "fixedUri": "type"
      },
      {
        "path": "Extension.extension:enableWhen",
        "short": "Only allow data when",
        "definition": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.",
        "comment": "If multiple repetitions of this extension are present, the interpretation is driven by enableBehavior (either all repetitions must evaluate to true for this item to be enabled, or only one must evaluate to true for the item to be enabled).  If the enableWhen.question has multiple answers, the condition evaluates to true if *any* of the answers for the referenced item match the enableWhen condition.  This element is a modifier because if enableWhen is present for an item, \"required\" is ignored unless one of the enableWhen conditions is met. When an item is disabled, all of its descendants are disabled, regardless of what their own enableWhen logic might evaluate to.  If enableWhen logic depends on an item that is disabled, the logic should proceed as though the item is not valued - even if a default value or other value might be retained in memory in the event of the item being re-enabled.  In some cases, the comparison between the indicated answer and the specified value may differ only by precision.  For example, the enableWhen might be Q1 > 1970, but the answer to Q1 is 1970-10-15.  There is not a clear answer as to whether 1970-10-15 should be considered 'greater' than 1970, given that it is an imprecise value.  In these indeterminate situations, the form filler has the option of refusing to render the form.  If the form **is** displayed, items where enableWhen is indeterminate SHOULD be treated as enabled with a warning indicating that the questionnaire logic was faulty and it is possible that the item should not be enabled.  Questionnaires SHOULD be designed to take into account challenges around varying precision to minimize non-deterministic situations by setting constraints around expected precision, etc.",
        "min": 0,
        "max": "*",
        "isModifier": true
      },
      {
        "path": "Extension.extension:enableWhen.extension:question",
        "short": "The linkId of question that determines whether item is enabled/disabled",
        "definition": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.",
        "comment": "If multiple question occurrences are present for the same question (same linkId), then this refers to the nearest question occurrence reachable by tracing first the \"ancestor\" axis and then the \"preceding\" axis and then the \"following\" axis.  If there are multiple items with the same linkId and all are equadistant (e.g. a question references a question that appears in a separate repeating group), that is an error.  (Consider using the enableWhenExpression extension to define logic to handle such a situation.)",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:enableWhen.extension:question.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:enableWhen.extension:question.url",
        "fixedUri": "question"
      },
      {
        "path": "Extension.extension:enableWhen.extension:operator",
        "short": "exists | = | != | > | < | >= | <=",
        "definition": "Specifies the criteria by which the question is enabled.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:enableWhen.extension:operator.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:enableWhen.extension:operator.url",
        "fixedUri": "operator"
      },
      {
        "path": "Extension.extension:enableWhen.extension:answer[x]",
        "short": "Value for question comparison based on operator",
        "definition": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:enableWhen.extension:answer[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:enableWhen.extension:answer[x].url",
        "fixedUri": "answer%5Bx%5D"
      },
      {
        "path": "Extension.extension:enableWhen.url",
        "fixedUri": "enableWhen"
      },
      {
        "path": "Extension.extension:question",
        "short": "The linkId of question that determines whether item is enabled/disabled",
        "definition": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.",
        "comment": "If multiple question occurrences are present for the same question (same linkId), then this refers to the nearest question occurrence reachable by tracing first the \"ancestor\" axis and then the \"preceding\" axis and then the \"following\" axis.  If there are multiple items with the same linkId and all are equadistant (e.g. a question references a question that appears in a separate repeating group), that is an error.  (Consider using the enableWhenExpression extension to define logic to handle such a situation.)",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:question.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:question.url",
        "fixedUri": "question"
      },
      {
        "path": "Extension.extension:operator",
        "short": "exists | = | != | > | < | >= | <=",
        "definition": "Specifies the criteria by which the question is enabled.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:operator.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:operator.url",
        "fixedUri": "operator"
      },
      {
        "path": "Extension.extension:answer[x]",
        "short": "Value for question comparison based on operator",
        "definition": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.  If there are multiple answers, a match on any of the answers suffices.  If different behavior is desired (all must match, at least 2 must match, etc.), consider using the enableWhenExpression extension.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answer[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:answer[x].url",
        "fixedUri": "answer%5Bx%5D"
      },
      {
        "path": "Extension.extension:enableBehavior",
        "short": "all | any",
        "definition": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.",
        "comment": "This element must be specified if more than one enableWhen value is provided.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:enableBehavior.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:enableBehavior.url",
        "fixedUri": "enableBehavior"
      },
      {
        "path": "Extension.extension:disabledDisplay",
        "short": "hidden | protected",
        "definition": "Indicates if and how items that are disabled (because enableWhen evaluates to 'false') should be displayed.",
        "comment": "If not specified, rendering behavior is up to the client.  This element is only meaningful if enableWhen or an equivalent extension is present",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:disabledDisplay.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:disabledDisplay.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:disabledDisplay.url",
        "fixedUri": "disabledDisplay"
      },
      {
        "path": "Extension.extension:required",
        "short": "Whether the item must be included in data results",
        "definition": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.",
        "comment": "If the required item is a question, it must have a direct answer (i.e. an answer to the question itself, not merely answers to child questions) in order for the QuestionnaireResponse to be complete.  If the required item is a group, it must have at least one descendant question which has an answer  Questionnaire.item.required only has meaning for elements that are conditionally enabled with enableWhen if the condition evaluates to true.  It also only has meaning if the parent element is present.  If a non-required 'group' item contains a 'required' question item, it's completely fine to omit the group (because it's not required) despite it having a required child.  Similarly, if an item that contains other items is marked as required, that does not automatically make the contained elements required (though required groups must contain at least one descendant item with a populated answer). The value for 'required' may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:required.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:required.url",
        "fixedUri": "required"
      },
      {
        "path": "Extension.extension:repeats",
        "short": "Whether the item may repeat",
        "definition": "An indication, if true, that a QuestionnaireResponse for this item may include multiple answers associated with a single instance of this item (for question-type items) or multiple repetitions of the item (for group-type items).",
        "comment": "If a question is marked as repeats=true, then multiple answers can be provided for the question in the corresponding QuestionnaireResponse.  When rendering the questionnaire, it is up to the rendering software whether to render the question text for each answer repetition (i.e. \"repeat the question\") or to simply allow entry/selection of multiple answers for the question (repeat the answers).  Which is most appropriate visually may depend on the type of answer as well as whether there are nested items.\n\nThe resulting QuestionnaireResponse will be populated the same way regardless of rendering - one 'question' item with multiple answer values.\n\n The value may come from the ElementDefinition referred to by .definition.  When repeats=true for a group, it'll be represented with multiple items with the same linkId in the QuestionnaireResponse.  For a question, it'll be represented by a single item with that linkId with multiple answers.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:repeats.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:repeats.url",
        "fixedUri": "repeats"
      },
      {
        "path": "Extension.extension:readOnly",
        "short": "Don't allow human editing",
        "definition": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.",
        "comment": "If specified on a 'group', then all items beneath the specified group are read only.  For questions, this only marks the answer associated with the specific item read only.  Descendant questions are not impacted.  The value of readOnly elements can be established by asserting extensions for defaultValues, linkages that support pre-population and/or extensions that support calculation based on other answers.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:readOnly.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:readOnly.url",
        "fixedUri": "readOnly"
      },
      {
        "path": "Extension.extension:maxLength",
        "short": "No more than these many characters",
        "definition": "The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.",
        "comment": "For base64binary, reflects the number of characters representing the encoded data, not the number of bytes of the binary data. The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:maxLength.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:maxLength.url",
        "fixedUri": "maxLength"
      },
      {
        "path": "Extension.extension:answerConstraint",
        "short": "optionsOnly | optionsOrType | optionsOrString",
        "definition": "For items that have a defined set of allowed answers (via answerOption or answerValueSet), indicates whether values *other* than those specified can be selected.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answerConstraint.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:answerConstraint.extension:code",
        "sliceName": "code",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-code"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:answerConstraint.url",
        "fixedUri": "answerConstraint"
      },
      {
        "path": "Extension.extension:answerValueSet",
        "short": "ValueSet containing permitted answers",
        "definition": "A reference to a value set containing a list of values representing permitted answers for a question.",
        "comment": "LOINC defines many useful value sets for questionnaire responses. See [LOINC Answer Lists](https://terminology.hl7.org/LOINC.html). The value may come from the ElementDefinition referred to by .definition.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answerValueSet.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:answerValueSet.url",
        "fixedUri": "answerValueSet"
      },
      {
        "path": "Extension.extension:answerOption",
        "short": "Permitted answer",
        "definition": "One of the permitted answers for the question.",
        "comment": "This element can be used when the value set machinery of answerValueSet is deemed too cumbersome or when there's a need to capture possible answers that are not codes.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answerOption.extension:value[x]",
        "short": "Answer value",
        "definition": "A potential answer that's allowed as the answer to this question.",
        "comment": "The data type of the value must agree with the item.type.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answerOption.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:answerOption.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:answerOption.extension:initialSelected",
        "short": "Whether option is selected by default",
        "definition": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:answerOption.extension:initialSelected.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:answerOption.extension:initialSelected.url",
        "fixedUri": "initialSelected"
      },
      {
        "path": "Extension.extension:answerOption.url",
        "fixedUri": "answerOption"
      },
      {
        "path": "Extension.extension:value[x]",
        "short": "Answer value",
        "definition": "A potential answer that's allowed as the answer to this question.",
        "comment": "The data type of the value must agree with the item.type.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:initialSelected",
        "short": "Whether option is selected by default",
        "definition": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
        "min": 0,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:initialSelected.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:initialSelected.url",
        "fixedUri": "initialSelected"
      },
      {
        "path": "Extension.extension:initial",
        "short": "Initial value(s) when item is first rendered",
        "definition": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.",
        "comment": "The user is allowed to change the value and override the default (unless marked as read-only). If the user doesn't change the value, then this initial value will be persisted when the QuestionnaireResponse is initially created.  Note that initial values can influence results.  The data type of initial.answer[x] must agree with the item.type, and only repeating items can have more then one initial value.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:initial.extension:value[x]",
        "short": "Actual value for initializing the question",
        "definition": "The actual value to for an initial answer.",
        "comment": "The type of the initial value must be consistent with the type of the item.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:initial.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:initial.extension:value[x].extension:Attachment",
        "sliceName": "Attachment",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Attachment"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:initial.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:initial.url",
        "fixedUri": "initial"
      },
      {
        "path": "Extension.extension:value[x]",
        "short": "Actual value for initializing the question",
        "definition": "The actual value to for an initial answer.",
        "comment": "The type of the initial value must be consistent with the type of the item.",
        "min": 1,
        "max": "1",
        "isModifier": false
      },
      {
        "path": "Extension.extension:value[x].value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:value[x].extension:Attachment",
        "sliceName": "Attachment",
        "sliceIsConstraining": true,
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/5.0/StructureDefinition/extension-Attachment"
            ]
          }
        ]
      },
      {
        "path": "Extension.extension:value[x].url",
        "fixedUri": "value%5Bx%5D"
      },
      {
        "path": "Extension.extension:item",
        "short": "Nested questionnaire items",
        "definition": "Text, questions and other groups to be nested beneath a question or group.",
        "comment": "There is no specified limit to the depth of nesting.  However, Questionnaire authors are encouraged to consider the impact on the user and user interface of overly deep nesting.",
        "min": 0,
        "max": "*",
        "isModifier": false
      },
      {
        "path": "Extension.extension:item.value[x]",
        "max": "0"
      },
      {
        "path": "Extension.extension:item.url",
        "fixedUri": "item"
      },
      {
        "path": "Extension.url",
        "fixedUri": "http://hl7.org/fhir/5.0/StructureDefinition/extension-Questionnaire.item"
      }
    ]
  }
}